[
  {
    "predictSQL": "SELECT COUNT(*) FROM singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age DESC",
    "goldSQL": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age DESC",
    "goldSQL": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(singer.Age), MIN(singer.Age), MAX(singer.Age) FROM singer WHERE singer.Country = \"France\"",
    "goldSQL": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(singer.Age), MIN(singer.Age), MAX(singer.Age) FROM singer WHERE singer.Is_male = \"French\"",
    "goldSQL": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age LIMIT 1",
    "goldSQL": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age LIMIT 1",
    "goldSQL": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 20",
    "goldSQL": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 20",
    "goldSQL": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Country, COUNT(*) FROM singer GROUP BY singer.Country",
    "goldSQL": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Country, COUNT(*) FROM singer GROUP BY singer.Country",
    "goldSQL": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT AVG(singer.Age) FROM singer)",
    "goldSQL": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT AVG(singer.Age) FROM singer)",
    "goldSQL": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 5000 AND 10000",
    "goldSQL": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 5000 AND 10000",
    "goldSQL": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(stadium.Capacity), AVG(stadium.Average) FROM stadium",
    "goldSQL": "select max(capacity), average from stadium",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(stadium.Capacity), MAX(stadium.Capacity) FROM stadium",
    "goldSQL": "select avg(capacity) ,  max(capacity) from stadium",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, stadium.Capacity FROM stadium ORDER BY stadium.Average DESC LIMIT 1",
    "goldSQL": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, stadium.Capacity FROM stadium ORDER BY stadium.Average DESC LIMIT 1",
    "goldSQL": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM concert WHERE concert.Year = 2014 OR concert.Year = 2015",
    "goldSQL": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM concert WHERE concert.Year = 2014 OR concert.Year = 2015",
    "goldSQL": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY concert.Stadium_ID",
    "goldSQL": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY concert.Stadium_ID",
    "goldSQL": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year >= 2014 GROUP BY concert.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year > 2013 GROUP BY concert.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)",
    "goldSQL": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)",
    "goldSQL": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Country FROM singer WHERE singer.Age < 30 INTERSECT SELECT singer.Country FROM singer WHERE singer.Age > 40",
    "goldSQL": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 2014",
    "goldSQL": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year = 2014",
    "goldSQL": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT concert.concert_Name, concert.Theme, COUNT(*) FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer_in_concert.concert_ID",
    "goldSQL": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT concert.concert_Name, concert.Theme, COUNT(*) FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer_in_concert.concert_ID",
    "goldSQL": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name, COUNT(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer_in_concert.Singer_ID",
    "goldSQL": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name, COUNT(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer_in_concert.Singer_ID",
    "goldSQL": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014",
    "goldSQL": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014",
    "goldSQL": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE \"% Hey %\"",
    "goldSQL": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE \"% Hey %\"",
    "goldSQL": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, stadium.Location FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year = 2014 INTERSECT SELECT stadium.Name, stadium.Location FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year = 2015",
    "goldSQL": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 2014 INTERSECT SELECT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 2015",
    "goldSQL": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(stadium.Capacity) FROM stadium)",
    "goldSQL": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(stadium.Capacity) FROM stadium)",
    "goldSQL": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Pets WHERE Pets.weight > 10",
    "goldSQL": "SELECT count(*) FROM pets WHERE weight  >  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Pets WHERE Pets.weight > 10",
    "goldSQL": "SELECT count(*) FROM pets WHERE weight  >  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Pets.weight FROM Pets ORDER BY Pets.pet_age LIMIT 1",
    "goldSQL": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(Pets.weight) FROM Pets ORDER BY Pets.pet_age LIMIT 1",
    "goldSQL": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT MAX(Pets.weight), MAX(Pets.PetType) FROM Pets GROUP BY Pets.PetType",
    "goldSQL": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT MAX(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType",
    "goldSQL": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Sex = \"F\"",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Sex = \"VALUE\"",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Pets.PetType) FROM Pets",
    "goldSQL": "SELECT count(DISTINCT pettype) FROM pets",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Pets.PetType) FROM Pets",
    "goldSQL": "SELECT count(DISTINCT pettype) FROM pets",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\" OR Pets.PetType = \"dog\"",
    "goldSQL": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\" OR Pets.PetType = \"dog\"",
    "goldSQL": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student.Fname FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\" INTERSECT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"dog\")",
    "goldSQL": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.Fname FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"dogs\") INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"dogs\"",
    "goldSQL": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\")",
    "goldSQL": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\")",
    "goldSQL": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\"",
    "goldSQL": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"VALUE\"",
    "goldSQL": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.Fname, Student.Age FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"dog\" EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\")",
    "goldSQL": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.Fname FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = \"cat\")",
    "goldSQL": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age LIMIT 1",
    "goldSQL": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age LIMIT 1",
    "goldSQL": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1",
    "goldSQL": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1",
    "goldSQL": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Pets.pet_age), MAX(Pets.pet_age), Pets.PetType FROM Pets GROUP BY Pets.PetType",
    "goldSQL": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Pets.pet_age), MAX(Pets.pet_age), Pets.PetType FROM Pets GROUP BY Pets.PetType",
    "goldSQL": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Pets.PetType, AVG(Pets.weight) FROM Pets GROUP BY Pets.PetType",
    "goldSQL": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Pets.PetType, AVG(Pets.weight) FROM Pets GROUP BY Pets.PetType",
    "goldSQL": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID",
    "goldSQL": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID",
    "goldSQL": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Has_Pet.PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = \"Smith\"",
    "goldSQL": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Has_Pet.PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = \"Smith\"",
    "goldSQL": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID",
    "goldSQL": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student.StuID, COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID",
    "goldSQL": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Has_Pet.StuID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age = 3 AND Pets.PetType = \"cat\"",
    "goldSQL": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student.LName FROM Student WHERE Student.Age = 3",
    "goldSQL": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)",
    "goldSQL": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)",
    "goldSQL": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM continents",
    "goldSQL": "SELECT count(*) FROM CONTINENTS;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM continents",
    "goldSQL": "SELECT count(*) FROM CONTINENTS;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT continents.Continent, COUNT(*) FROM countries JOIN continents ON countries.Continent = continents.ContId GROUP BY countries.Continent",
    "goldSQL": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.Continent",
    "goldSQL": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM countries",
    "goldSQL": "SELECT count(*) FROM COUNTRIES;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM countries",
    "goldSQL": "SELECT count(*) FROM COUNTRIES;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT car_makers.FullName, model_list.Maker, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id",
    "goldSQL": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT car_makers.Maker, car_makers.FullName, COUNT(*), car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id",
    "goldSQL": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Horsepower LIMIT 1",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.Maker = cars_data.Id ORDER BY cars_data.Horsepower LIMIT 1",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT car_names.Model FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(cars_data.Weight) FROM cars_data)",
    "goldSQL": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT car_names.Model FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(cars_data.Weight) FROM cars_data)",
    "goldSQL": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970",
    "goldSQL": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = 1970",
    "goldSQL": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT car_makers.Maker, car_makers.FullName FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_names.Make = \"carr\" ORDER BY car_names.Make LIMIT 1",
    "goldSQL": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT car_names.Model FROM car_names WHERE car_names.Make LIKE \"1980 %\"",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.Model LIKE \"1980 %\"",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent",
    "goldSQL": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName, COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.Continent",
    "goldSQL": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Country ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), car_makers.FullName FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY model_list.Maker",
    "goldSQL": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), car_makers.Maker, car_makers.FullName FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN car_makers ON car_names.MakeId = car_makers.Id GROUP BY car_makers.Id",
    "goldSQL": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT 5 FROM car_names WHERE car_names.Make = \"amc hornet sportabout (sw\"",
    "goldSQL": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT 10 FROM car_names WHERE car_names.Make = \"amc hornet sportabout (sw\"",
    "goldSQL": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = \"france\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = \"France\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM countries WHERE countries.CountryName = \"usa\"",
    "goldSQL": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM countries WHERE countries.CountryName = \"United States\"",
    "goldSQL": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4",
    "goldSQL": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4",
    "goldSQL": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974",
    "goldSQL": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974 AND cars_data.Cylinders = 8",
    "goldSQL": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country",
    "goldSQL": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(*) >= 1",
    "goldSQL": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Horsepower > 150",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Horsepower > 150",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year",
    "goldSQL": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(cars_data.Weight), AVG(cars_data.Year) FROM cars_data GROUP BY cars_data.Year",
    "goldSQL": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country HAVING COUNT(*) >= 3",
    "goldSQL": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country HAVING COUNT(*) >= 3",
    "goldSQL": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT MAX(car_names.Make), car_names.Make FROM model_list JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = 3",
    "goldSQL": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT cars_data.MPG FROM cars_data ORDER BY cars_data.MPG DESC LIMIT 1",
    "goldSQL": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980",
    "goldSQL": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980",
    "goldSQL": "select avg(horsepower) from cars_data where year  <  1980;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(10) FROM model_list JOIN car_makers ON model_list.Model = car_makers.Id WHERE car_makers.FullName = \"volvo\" AND model_list.Model = \"volvo\"",
    "goldSQL": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON car_names.Model = cars_data.Id WHERE car_names.Model = \"volvo\"",
    "goldSQL": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders",
    "goldSQL": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders",
    "goldSQL": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > 4",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > 4",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Year = 1980",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM car_names WHERE car_names.Make = 1980",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId WHERE car_makers.FullName = \"American Motor Company\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = \"American Motor Company\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3",
    "goldSQL": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT car_makers.Maker, car_makers.Id FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY model_list.Maker HAVING COUNT(*) > 3",
    "goldSQL": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT car_names.Model FROM model_list JOIN car_names ON car_names.MakeId = model_list.Maker JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = \"General Motors\" OR car_makers.FullName = 3500",
    "goldSQL": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT car_names.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = \"General Motors\" OR car_makers.FullName = 3500",
    "goldSQL": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000 AND cars_data.Horsepower != 4000",
    "goldSQL": "select distinct year from cars_data where weight between 3000 and 4000;",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000",
    "goldSQL": "select distinct year from cars_data where weight between 3000 and 4000;",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1",
    "goldSQL": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1",
    "goldSQL": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT MAX(cars_data.Accelerate) FROM cars_data)",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) > 2)",
    "goldSQL": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM (SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country HAVING COUNT(*) > 2)",
    "goldSQL": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > 6",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > 6",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders <= 4 ORDER BY cars_data.Horsepower DESC LIMIT 1",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Cylinders LIKE \"4 %\" ORDER BY cars_data.Horsepower DESC LIMIT 1",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders < 8 OR cars_data.Year < 1980",
    "goldSQL": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders > 8 OR cars_data.Year < 1980",
    "goldSQL": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM continents",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)",
    "goldSQL": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)",
    "goldSQL": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers GROUP BY car_makers.Id HAVING COUNT(*) > 3",
    "goldSQL": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.Make GROUP BY car_makers.Id HAVING COUNT(*) >= 3",
    "goldSQL": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = \"fiat\" GROUP BY countries.CountryId HAVING COUNT(*) > 3",
    "goldSQL": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = \"fiat\" GROUP BY countries.CountryId HAVING COUNT(*) > 3",
    "goldSQL": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airlines.Country FROM airlines WHERE airlines.Airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Country FROM airlines WHERE airlines.Airline = \"Jetblue Airways\"",
    "goldSQL": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = \"Jetblue Airways\"",
    "goldSQL": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = \"USA\"",
    "goldSQL": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = \"USA\"",
    "goldSQL": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = \"Anthony\"",
    "goldSQL": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportCode FROM airports WHERE airports.City = \"Anthony\" AND airports.AirportName = \"corresonding\"",
    "goldSQL": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines",
    "goldSQL": "SELECT count(*) FROM AIRLINES",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines",
    "goldSQL": "SELECT count(*) FROM AIRLINES",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports",
    "goldSQL": "SELECT count(*) FROM AIRPORTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports",
    "goldSQL": "SELECT count(*) FROM AIRPORTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM flights",
    "goldSQL": "SELECT count(*) FROM FLIGHTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM flights",
    "goldSQL": "SELECT count(*) FROM FLIGHTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = \"UAL\"",
    "goldSQL": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = \"UAL\"",
    "goldSQL": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines WHERE airlines.Country = \"USA\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines WHERE airlines.Country = \"USA\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = \"Alton\"",
    "goldSQL": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = \"Alton\"",
    "goldSQL": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportName FROM airports WHERE airports.AirportCode = \"AKO\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportName FROM airports WHERE airports.AirportCode = \"AKO\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportName FROM airports WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportName FROM airports WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.AirportCode = \"APG\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE flights.SourceAirport = \"APG\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.AirportCode = \"ATO\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = \"ATO\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON flights.SourceAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON flights.DestAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = \"Aberdeen\" AND airports.AirportName = \"Ashley\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = \"Aberdeen\" AND airports.AirportName = \"Ashley\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = \"Jetblue Airways\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM airlines",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines WHERE airlines.Airline = \"asY\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines JOIN flights ON airlines.uid = flights.SourceAirport WHERE airlines.Airline = \"AHD\" AND flights.SourceAirport = \"United Airlines\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE airlines.Airline = \"AHD\" AND flights.DestAirport = \"United Airlines\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM airlines",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM flights JOIN airports ON flights.Airline = airports.AirportCode WHERE airports.City = \"Aberdeen\" AND flights.DestAirport = \"United Airlines\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY flights.DestAirport ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.City FROM airports GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY COUNT(*) LIMIT 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY flights.SourceAirport ORDER BY COUNT(*) LIMIT 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline GROUP BY airlines.Airline ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline GROUP BY airlines.Airline ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.Airline = flights.Airline GROUP BY flights.Airline ORDER BY COUNT(*) LIMIT 1",
    "goldSQL": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY flights.Airline ORDER BY COUNT(*) LIMIT 1",
    "goldSQL": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT flights.Airline FROM flights WHERE flights.SourceAirport = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = \"APG\" INTERSECT SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = \"CVO\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.Airline FROM flights WHERE flights.SourceAirport = \"APG\" INTERSECT SELECT flights.Airline FROM flights WHERE flights.SourceAirport = \"CVO\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT flights.Airline FROM flights WHERE flights.SourceAirport = \"CVO\" EXCEPT SELECT flights.Airline FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE flights.SourceAirport = \"APG\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = \"CVO\" EXCEPT SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = \"APG\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.Airline FROM flights GROUP BY flights.Airline HAVING COUNT(*) >= 10",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Airline GROUP BY flights.Airline HAVING COUNT(*) >= 10",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT flights.Airline FROM flights GROUP BY flights.Airline HAVING COUNT(*) < 200",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Airline GROUP BY flights.Airline HAVING COUNT(*) < 200",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = \"United Airlines\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = \"United Airlines\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.AirportCode = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE flights.DestAirport = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM airports JOIN flights ON flights.SourceAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM airports JOIN flights ON flights.SourceAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE airports.City = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON flights.DestAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\" OR airports.City = \"Abilene\"",
    "goldSQL": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM airports JOIN flights ON flights.DestAirport = airports.AirportCode WHERE airports.City = \"Aberdeen\" OR airports.City = \"Abilene\"",
    "goldSQL": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT airports.AirportName, airports.City FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.SourceAirport FROM flights)",
    "goldSQL": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.DestAirport FROM flights)",
    "goldSQL": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM employee",
    "goldSQL": "SELECT count(*) FROM employee",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM employee",
    "goldSQL": "SELECT count(*) FROM employee",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM employee ORDER BY employee.Age ASC",
    "goldSQL": "SELECT name FROM employee ORDER BY age",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM employee ORDER BY employee.Age ASC",
    "goldSQL": "SELECT name FROM employee ORDER BY age",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), employee.City FROM employee GROUP BY employee.City",
    "goldSQL": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), employee.City FROM employee GROUP BY employee.City",
    "goldSQL": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.City FROM employee WHERE employee.Age > 30 GROUP BY employee.City HAVING COUNT(*) > 1",
    "goldSQL": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT employee.City FROM employee WHERE employee.Age > 30 GROUP BY employee.City HAVING COUNT(*) > 1",
    "goldSQL": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*), shop.Location FROM shop GROUP BY shop.Location",
    "goldSQL": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), shop.Location FROM shop GROUP BY shop.Location",
    "goldSQL": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products DESC LIMIT 1",
    "goldSQL": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products DESC LIMIT 1",
    "goldSQL": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(shop.Number_products), MAX(shop.Number_products) FROM shop",
    "goldSQL": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(shop.Number_products), MAX(shop.Number_products) FROM shop",
    "goldSQL": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products DESC",
    "goldSQL": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products DESC",
    "goldSQL": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT AVG(shop.Number_products) FROM shop)",
    "goldSQL": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT AVG(shop.Number_products) FROM shop)",
    "goldSQL": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM evaluation JOIN employee ON evaluation.Employee_ID = employee.Employee_ID GROUP BY evaluation.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM evaluation JOIN employee ON evaluation.Employee_ID = employee.Employee_ID GROUP BY evaluation.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM evaluation JOIN employee ON evaluation.Employee_ID = employee.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)",
    "goldSQL": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)",
    "goldSQL": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)",
    "goldSQL": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)",
    "goldSQL": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.Name, COUNT(*) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID",
    "goldSQL": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT shop.Shop_ID, COUNT(*) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID",
    "goldSQL": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT SUM(evaluation.Bonus) FROM evaluation",
    "goldSQL": "SELECT sum(bonus) FROM evaluation",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(evaluation.Bonus) FROM evaluation",
    "goldSQL": "SELECT sum(bonus) FROM evaluation",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM hiring",
    "goldSQL": "SELECT * FROM hiring",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM hiring",
    "goldSQL": "SELECT * FROM hiring",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.District FROM shop WHERE shop.Number_products < 3000 INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 10000",
    "goldSQL": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT shop.District FROM shop WHERE shop.Number_products < 3000 INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 10000",
    "goldSQL": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT shop.Location) FROM shop",
    "goldSQL": "SELECT count(DISTINCT LOCATION) FROM shop",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT shop.Location) FROM shop",
    "goldSQL": "SELECT count(DISTINCT LOCATION) FROM shop",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Documents",
    "goldSQL": "SELECT count(*) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Documents",
    "goldSQL": "SELECT count(*) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents",
    "goldSQL": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents",
    "goldSQL": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE \"% w %\"",
    "goldSQL": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE \"% w %\"",
    "goldSQL": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = \"Robbin CV\"",
    "goldSQL": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = \"Robbin CV\"",
    "goldSQL": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Documents.Template_ID) FROM Documents",
    "goldSQL": "SELECT count(DISTINCT template_id) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Documents.Template_ID) FROM Documents",
    "goldSQL": "SELECT count(DISTINCT template_id) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = \"PPT\"",
    "goldSQL": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = \"PPT\"",
    "goldSQL": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Template_ID, COUNT(*) FROM Documents GROUP BY Documents.Template_ID",
    "goldSQL": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Template_ID, COUNT(*) FROM Documents GROUP BY Documents.Template_ID",
    "goldSQL": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents",
    "goldSQL": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents",
    "goldSQL": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Templates",
    "goldSQL": "SELECT count(*) FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Templates",
    "goldSQL": "SELECT count(*) FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates",
    "goldSQL": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates",
    "goldSQL": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Templates.Template_Type_Code FROM Templates",
    "goldSQL": "SELECT DISTINCT template_type_code FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Templates.Template_Type_Code FROM Templates",
    "goldSQL": "SELECT DISTINCT template_type_code FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = \"PP\" OR Templates.Template_Type_Code = \"PPT\"",
    "goldSQL": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = \"PP\" OR Templates.Template_Type_Code = \"PPT\"",
    "goldSQL": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Templates WHERE Templates.Template_Type_Code = \"CV\"",
    "goldSQL": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Templates WHERE Templates.Template_Type_Code = \"CV\"",
    "goldSQL": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5",
    "goldSQL": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5",
    "goldSQL": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code, COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code",
    "goldSQL": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code, COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code",
    "goldSQL": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING COUNT(*) < 3",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING COUNT(*) < 3",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(Templates.Version_Number), Templates.Template_Type_Code FROM Templates",
    "goldSQL": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(Templates.Version_Number), Templates.Template_Type_Code FROM Templates ORDER BY Templates.Version_Number LIMIT 1",
    "goldSQL": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Document_ID WHERE Documents.Document_Name = \"Data base\"",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Document_ID WHERE Documents.Document_Name = \"Data base\"",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = \"BK\"",
    "goldSQL": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = \"BK\"",
    "goldSQL": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code, COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code",
    "goldSQL": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code, COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code",
    "goldSQL": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates",
    "goldSQL": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates",
    "goldSQL": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types",
    "goldSQL": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types",
    "goldSQL": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = \"AD\"",
    "goldSQL": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = \"AD\"",
    "goldSQL": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = \"Book\"",
    "goldSQL": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = \"Book\"",
    "goldSQL": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code",
    "goldSQL": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Documents.Document_Description FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID",
    "goldSQL": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = \"Presentation\"",
    "goldSQL": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = \"Presentation\"",
    "goldSQL": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Paragraphs",
    "goldSQL": "SELECT count(*) FROM Paragraphs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Paragraphs",
    "goldSQL": "SELECT count(*) FROM Paragraphs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = \"Summer Show\"",
    "goldSQL": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Paragraphs.Paragraph_Text) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = \"Summer Show\"",
    "goldSQL": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text = \"Korea\"",
    "goldSQL": "select other_details from paragraphs where paragraph_text like 'korea'",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE \"% Korea %\"",
    "goldSQL": "select other_details from paragraphs where paragraph_text like 'korea'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = \"Welcome to NY\"",
    "goldSQL": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = \"Welcome to NY\"",
    "goldSQL": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = \"Customer reviews\"",
    "goldSQL": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = \"Customer reviews\"",
    "goldSQL": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID, COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*)",
    "goldSQL": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID, COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*)",
    "goldSQL": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Document_Name, COUNT(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID GROUP BY Paragraphs.Document_ID",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Document_Name, COUNT(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC LIMIT 1",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC LIMIT 1",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) BETWEEN 1 AND 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) BETWEEN 1 AND 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = \"Brazil\" INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = \"Ireland\"",
    "goldSQL": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE \"% Brazil %\" UNION SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE \"% Ireland %\"",
    "goldSQL": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM teacher",
    "goldSQL": "SELECT count(*) FROM teacher",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM teacher",
    "goldSQL": "SELECT count(*) FROM teacher",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC",
    "goldSQL": "SELECT Name FROM teacher ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC",
    "goldSQL": "SELECT Name FROM teacher ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Age, teacher.Hometown FROM teacher",
    "goldSQL": "SELECT Age ,  Hometown FROM teacher",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Age, teacher.Hometown FROM teacher",
    "goldSQL": "SELECT Age ,  Hometown FROM teacher",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher WHERE teacher.Hometown != \"Little Lever Urban District\"",
    "goldSQL": "select name from teacher where hometown != \"little lever urban district\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher WHERE teacher.Hometown != \"Little Lever Urban District\"",
    "goldSQL": "select name from teacher where hometown != \"little lever urban district\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher WHERE teacher.Age = 32 OR teacher.Age = 33",
    "goldSQL": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher WHERE teacher.Age = 32 OR teacher.Age = 33",
    "goldSQL": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age LIMIT 1",
    "goldSQL": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age LIMIT 1",
    "goldSQL": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Hometown, COUNT(*) FROM teacher GROUP BY teacher.Hometown",
    "goldSQL": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), teacher.Hometown FROM teacher GROUP BY teacher.Hometown",
    "goldSQL": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name, teacher.Hometown FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name, course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN course ON course_arrange.Course_ID = course.Course_ID JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name ASC",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID ORDER BY teacher.Name",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name FROM course JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID JOIN teacher ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course.Course = \"math\"",
    "goldSQL": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM course JOIN course_arrange ON course.Course_ID = course_arrange.Teacher_ID JOIN teacher ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course.Course = \"math\"",
    "goldSQL": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name, COUNT(*) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID",
    "goldSQL": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name, COUNT(*) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID",
    "goldSQL": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)",
    "goldSQL": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT teacher.Name FROM teacher EXCEPT SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID",
    "goldSQL": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM visitor WHERE visitor.Age < 30",
    "goldSQL": "SELECT count(*) FROM visitor WHERE age  <  30",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Level_of_membership ASC",
    "goldSQL": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(visitor.Age) FROM visitor WHERE visitor.Level_of_membership != 4",
    "goldSQL": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Age > 4 ORDER BY visitor.Age DESC",
    "goldSQL": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT museum.Museum_ID, museum.Name FROM museum ORDER BY museum.Num_of_Staff DESC LIMIT 1",
    "goldSQL": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < 2009",
    "goldSQL": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT museum.Open_Year, museum.Num_of_Staff FROM museum WHERE museum.Name = \"Plaza museum\"",
    "goldSQL": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > (SELECT MIN(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year > 2010)",
    "goldSQL": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID ORDER BY SUM(visit.Total_spent) DESC LIMIT 1",
    "goldSQL": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit)",
    "goldSQL": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visit.visitor_ID HAVING COUNT(*) = 1 ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(visit.Num_of_Ticket), MAX(visit.Num_of_Ticket) FROM visit",
    "goldSQL": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(visit.Total_spent) FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership = 1",
    "goldSQL": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT visitor.Name FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year < 2009 INTERSECT SELECT visitor.Name FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year > 2011",
    "goldSQL": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM visitor WHERE visitor.ID NOT IN (SELECT COUNT(*) FROM visit WHERE visit.visitor_ID IN (SELECT museum.Museum_ID FROM museum WHERE museum.Open_Year > 2010))",
    "goldSQL": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM museum WHERE museum.Open_Year > 2013 OR museum.Open_Year < 2008",
    "goldSQL": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM players",
    "goldSQL": "SELECT count(*) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM players",
    "goldSQL": "SELECT count(*) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM matches",
    "goldSQL": "SELECT count(*) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM matches",
    "goldSQL": "SELECT count(*) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = \"USA\"",
    "goldSQL": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = \"USA\"",
    "goldSQL": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(matches.loser_age), AVG(matches.winner_ht) FROM matches",
    "goldSQL": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(matches.loser_age), AVG(matches.winner_ht) FROM matches",
    "goldSQL": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(matches.winner_rank) FROM matches",
    "goldSQL": "SELECT avg(winner_rank) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(matches.winner_rank) FROM matches",
    "goldSQL": "SELECT avg(winner_rank) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(matches.loser_rank) FROM matches",
    "goldSQL": "SELECT min(loser_rank) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(matches.loser_rank) FROM matches",
    "goldSQL": "SELECT min(loser_rank) FROM matches",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT players.country_code) FROM players",
    "goldSQL": "SELECT count(DISTINCT country_code) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT players.country_code) FROM players",
    "goldSQL": "SELECT count(DISTINCT country_code) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT matches.loser_name) FROM matches",
    "goldSQL": "SELECT count(DISTINCT loser_name) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT matches.loser_name) FROM matches",
    "goldSQL": "SELECT count(DISTINCT loser_name) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING COUNT(*) > 10",
    "goldSQL": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING COUNT(*) > 10",
    "goldSQL": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.winner_name FROM matches WHERE matches.year = 2013 INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = 2016",
    "goldSQL": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.winner_name FROM players JOIN matches ON matches.winner_id = players.player_id WHERE matches.year = 2013 INTERSECT SELECT matches.winner_name FROM players JOIN matches ON matches.winner_id = players.player_id WHERE matches.year = 2016",
    "goldSQL": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM matches WHERE matches.year = 2013 OR matches.year = 2016",
    "goldSQL": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM matches WHERE matches.year = 2013 OR matches.year = 2016",
    "goldSQL": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.country_code, players.first_name FROM players JOIN matches ON matches.winner_id = players.player_id WHERE matches.tourney_name = \"WTA Championships\" INTERSECT SELECT players.country_code, players.first_name FROM players JOIN matches ON matches.winner_id = players.player_id WHERE matches.tourney_name = \"Australian Open\"",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id INTERSECT SELECT players.first_name, players.country_code FROM players JOIN matches ON matches.winner_id = players.player_id WHERE matches.tourney_name = \"Australian Open\"",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date DESC LIMIT 1",
    "goldSQL": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date DESC LIMIT 1",
    "goldSQL": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.last_name FROM players WHERE players.hand = \"left\" ORDER BY players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.last_name FROM players WHERE players.hand = \"left\" ORDER BY players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.winner_name, matches.winner_rank_points FROM rankings JOIN matches ON matches.winner_id = rankings.player_id GROUP BY matches.winner_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT matches.winner_name, matches.winner_rank_points FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.winner_name ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT matches.winner_name FROM rankings JOIN matches ON matches.winner_id = rankings.player_id WHERE matches.tourney_name = \"Australian Open\" ORDER BY matches.winner_rank_points DESC LIMIT 1",
    "goldSQL": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT matches.winner_name FROM rankings JOIN matches ON rankings.player_id = matches.match_num WHERE matches.tourney_name = \"Australian Open\" ORDER BY matches.winner_rank_points DESC LIMIT 1",
    "goldSQL": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT matches.loser_name, matches.winner_name FROM matches ORDER BY matches.minutes DESC LIMIT 1",
    "goldSQL": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.winner_name, matches.loser_name FROM matches ORDER BY matches.minutes DESC LIMIT 1",
    "goldSQL": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(rankings.ranking), players.first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY rankings.player_id",
    "goldSQL": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.first_name, AVG(rankings.ranking) FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name",
    "goldSQL": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(rankings.ranking_points), players.first_name FROM rankings JOIN players ON rankings.player_id = players.player_id",
    "goldSQL": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.first_name, SUM(rankings.ranking_points) FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name",
    "goldSQL": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.country_code, COUNT(*) FROM players GROUP BY players.country_code",
    "goldSQL": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.country_code, COUNT(*) FROM players GROUP BY players.country_code",
    "goldSQL": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT(*) > 50",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT(*) > 50",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(rankings.tours), rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date",
    "goldSQL": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT rankings.ranking_date, SUM(rankings.tours) FROM rankings GROUP BY rankings.ranking_date",
    "goldSQL": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), matches.year FROM matches GROUP BY matches.year",
    "goldSQL": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), matches.year FROM matches GROUP BY matches.year",
    "goldSQL": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age ASC LIMIT 3",
    "goldSQL": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age ASC LIMIT 3",
    "goldSQL": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT matches.winner_id) FROM matches WHERE matches.winner_hand = \"WTA Championships\" INTERSECT SELECT COUNT(DISTINCT matches.winner_ht) FROM matches WHERE matches.winner_hand = \"left\"",
    "goldSQL": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM matches WHERE matches.winner_hand = \"left\" AND matches.winner_hand = \"WTA Championships\"",
    "goldSQL": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_rank_points DESC LIMIT 1",
    "goldSQL": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = matches.winner_id GROUP BY players.player_id ORDER BY SUM(matches.winner_rank_points) DESC LIMIT 1",
    "goldSQL": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT players.hand, COUNT(*) FROM players GROUP BY players.hand",
    "goldSQL": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT players.hand, COUNT(*) FROM players GROUP BY players.hand",
    "goldSQL": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM ship WHERE ship.disposition_of_ship = \"Captured\"",
    "goldSQL": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT ship.name, ship.tonnage FROM ship ORDER BY ship.name DESC",
    "goldSQL": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT battle.name, battle.date, battle.result FROM battle",
    "goldSQL": "SELECT name ,  date FROM battle",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT MAX(death.caused_by_ship_id), MIN(death.killed) FROM death GROUP BY death.caused_by_ship_id",
    "goldSQL": "SELECT max(killed) ,  min(killed) FROM death",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(death.injured) FROM death GROUP BY death.caused_by_ship_id",
    "goldSQL": "SELECT avg(injured) FROM death",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT \"death\", death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = \"t\"",
    "goldSQL": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != \"Boril\"",
    "goldSQL": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = \"Brig\"",
    "goldSQL": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id HAVING SUM(death.killed) > 10",
    "goldSQL": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id ORDER BY SUM(death.injured) DESC LIMIT 1",
    "goldSQL": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = \"Kaloyan\" INTERSECT SELECT battle.name FROM battle WHERE battle.bulgarian_commander = \"Baldwin I\"",
    "goldSQL": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT battle.result) FROM battle",
    "goldSQL": "SELECT count(DISTINCT RESULT) FROM battle",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM battle WHERE battle.id NOT IN (SELECT ship.id FROM ship WHERE ship.tonnage != 225)",
    "goldSQL": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT battle.name, battle.date FROM battle JOIN ship ON ship.lost_in_battle = battle.id WHERE ship.name = \"Lettice\" INTERSECT SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.id WHERE ship.name = \"HMS Atalanta\"",
    "goldSQL": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle EXCEPT SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location = \"English Channel\"",
    "goldSQL": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT death.note FROM death WHERE death.note LIKE \"% East %\"",
    "goldSQL": "SELECT note FROM death WHERE note LIKE '%East%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Addresses.line_1, Addresses.line_2 FROM Addresses WHERE Addresses.line_1 LIKE \"% 1 %\"",
    "goldSQL": "SELECT line_1 ,  line_2 FROM addresses",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Addresses.line_1, Addresses.line_2 FROM Addresses",
    "goldSQL": "SELECT line_1 ,  line_2 FROM addresses",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Courses",
    "goldSQL": "SELECT count(*) FROM Courses",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Courses",
    "goldSQL": "SELECT count(*) FROM Courses",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Courses.course_description FROM Courses WHERE Courses.course_name = \"math\"",
    "goldSQL": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Courses.course_description FROM Courses WHERE Courses.course_name = \"math\"",
    "goldSQL": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = \"Chelsea\"",
    "goldSQL": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = \"Port Chelsea\"",
    "goldSQL": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Departments.department_name, Degree_Programs.department_id FROM Courses JOIN Degree_Programs ON Courses.course_id = Degree_Programs.department_id JOIN Departments ON Degree_Programs.department_id = Departments.department_id GROUP BY Degree_Programs.department_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Departments.department_name, Departments.department_id FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id GROUP BY Departments.department_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Degree_Programs.department_id) FROM Degree_Programs",
    "goldSQL": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Degree_Programs.department_id) FROM Degree_Programs",
    "goldSQL": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs",
    "goldSQL": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs",
    "goldSQL": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id WHERE Departments.department_name = \"engineering\"",
    "goldSQL": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id WHERE Departments.department_name = \"engineering\"",
    "goldSQL": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Sections.section_name, Sections.section_description FROM Sections",
    "goldSQL": "SELECT section_name ,  section_description FROM Sections",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Sections.section_name, Sections.section_description FROM Sections",
    "goldSQL": "SELECT section_name ,  section_description FROM Sections",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING COUNT(*) <= 2",
    "goldSQL": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING COUNT(*) < 2",
    "goldSQL": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name DESC",
    "goldSQL": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name DESC",
    "goldSQL": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Semesters.semester_name, Student_Enrolment.semester_id FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id GROUP BY Student_Enrolment.semester_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Semesters.semester_name, Student_Enrolment.semester_id FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id GROUP BY Student_Enrolment.semester_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE \"% computer %\"",
    "goldSQL": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE \"% computer %\"",
    "goldSQL": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name, Student_Enrolment.semester_id FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_enrolment_id = Students.student_id GROUP BY Student_Enrolment.student_id HAVING COUNT(*) = 2",
    "goldSQL": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id GROUP BY Student_Enrolment.student_id HAVING COUNT(*) = 2",
    "goldSQL": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_enrolment_id = Students.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = \"Bachelor\"",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment_Courses JOIN Students ON Student_Enrolment_Courses.student_enrolment_id = Students.student_id JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id WHERE Courses.course_name = \"Bachelors\"",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student_Enrolment_Courses.student_enrolment_id FROM Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.student_enrolment_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Student_Enrolment_Courses.student_enrolment_id, TRANSCRIPTS(*) FROM Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.student_course_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name, COUNT(*) FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name, COUNT(*) FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)",
    "goldSQL": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)",
    "goldSQL": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id",
    "goldSQL": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id",
    "goldSQL": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.last_name FROM Students WHERE Students.student_id IN (SELECT Student_Enrolment.student_id FROM Student_Enrolment)",
    "goldSQL": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM Addresses",
    "goldSQL": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = \"Timmothy\" AND Students.last_name = \"Ward\"",
    "goldSQL": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = \"Timmothy\" AND Students.last_name = \"Ward\"",
    "goldSQL": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered ASC LIMIT 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered LIMIT 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered LIMIT 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered LIMIT 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Students.first_name FROM Students",
    "goldSQL": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Students.first_name FROM Students WHERE Students.current_address_id = (SELECT DISTINCT Students.permanent_address_id FROM Students)",
    "goldSQL": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Addresses.line_1, Students.current_address_id FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Students.current_address_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Transcripts.transcript_date) FROM Transcripts",
    "goldSQL": "SELECT avg(transcript_date) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Transcripts.transcript_date) FROM Transcripts",
    "goldSQL": "SELECT avg(transcript_date) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date ASC LIMIT 1",
    "goldSQL": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date LIMIT 1",
    "goldSQL": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Transcripts",
    "goldSQL": "SELECT count(*) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Transcripts",
    "goldSQL": "SELECT count(*) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date DESC LIMIT 1",
    "goldSQL": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date DESC LIMIT 1",
    "goldSQL": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Transcripts.transcript_id FROM Transcripts JOIN Student_Enrolment_Courses ON Transcripts.transcript_id = Student_Enrolment_Courses.course_id GROUP BY Student_Enrolment_Courses.student_enrolment_id",
    "goldSQL": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Transcript_Contents.transcript_id, COUNT(*) FROM Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id ORDER BY COUNT(*) LIMIT 1",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id ORDER BY COUNT(*) LIMIT 1",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Semesters.semester_name FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id INTERSECT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.student_id WHERE \"Degree_Programs\" = \"Bachelor\"",
    "goldSQL": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Student_Enrolment.semester_id FROM Student_Enrolment INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.degree_program_id = \"VALUE\"",
    "goldSQL": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Students.current_address_id) FROM Students",
    "goldSQL": "SELECT count(DISTINCT current_address_id) FROM Students",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Students.permanent_address_id FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id",
    "goldSQL": "SELECT count(DISTINCT current_address_id) FROM Students",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Students.other_student_details FROM Students ORDER BY Students.other_student_details DESC",
    "goldSQL": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Students.other_student_details FROM Students ORDER BY Students.other_student_details DESC",
    "goldSQL": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Sections.section_description FROM Sections WHERE Sections.section_description LIKE \"% h %\"",
    "goldSQL": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Sections.section_description FROM Sections WHERE Sections.section_name = \"h\"",
    "goldSQL": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM Addresses",
    "goldSQL": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Students.first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = \"Haiti\" OR Addresses.state_province_county = 09700166582",
    "goldSQL": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title",
    "goldSQL": "SELECT Title FROM Cartoon ORDER BY title",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title",
    "goldSQL": "SELECT Title FROM Cartoon ORDER BY title",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Cartoon WHERE Cartoon.Written_by = \"Joseph Kuhr\"",
    "goldSQL": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Cartoon.Written_by) FROM Cartoon WHERE Cartoon.Written_by = \"Joseph Kuhr\"",
    "goldSQL": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date",
    "goldSQL": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date",
    "goldSQL": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = \"Ben Jones\" OR Cartoon.Directed_by = \"Brandon Vietti\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = \"Ben Jones\" OR Cartoon.Directed_by = \"Brandon Vietti\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Country, COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Country, COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT TV_Channel.series_name), TV_Channel.Content FROM TV_Channel",
    "goldSQL": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT TV_Channel.series_name), COUNT(DISTINCT TV_Channel.Content) FROM TV_Channel",
    "goldSQL": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM TV_Channel WHERE TV_Channel.Language = \"English\"",
    "goldSQL": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM TV_Channel WHERE TV_Channel.Language = \"English\"",
    "goldSQL": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Language, COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY COUNT(*) ASC LIMIT 1",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Language, COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY COUNT(*) ASC LIMIT 1",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Language, COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), TV_Channel.Language FROM TV_Channel GROUP BY TV_Channel.Language",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE Cartoon.Title = \"the Rise of the Blue Beetle !\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id JOIN Cartoon ON TV_series.id = Cartoon.Production_code WHERE Cartoon.Title = \"the Rise of the Blue Beetle\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM Cartoon JOIN TV_series ON TV_series.id = Cartoon.Channel JOIN TV_Channel ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Cartoon.Title FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_series.id = Cartoon.id WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating",
    "goldSQL": "SELECT Episode FROM TV_series ORDER BY rating",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating",
    "goldSQL": "SELECT Episode FROM TV_series ORDER BY rating",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 3",
    "goldSQL": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 3",
    "goldSQL": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MIN(TV_series.Share), MAX(TV_series.Share) FROM TV_series",
    "goldSQL": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(TV_series.Share), MIN(TV_series.Share) FROM TV_series",
    "goldSQL": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = \"A Love of A Lifetime\"",
    "goldSQL": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = \"A Love of A Lifetime\"",
    "goldSQL": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = \"A Love of A Lifetime\"",
    "goldSQL": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = \"A Love of A Lifetime\"",
    "goldSQL": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_series.Episode = \"A Love of A Lifetime\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel ON TV_series.id = TV_Channel.id WHERE TV_series.Episode = \"A Love of A Lifetime\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.id = TV_Channel.id WHERE TV_Channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Cartoon.Directed_by FROM Cartoon GROUP BY Cartoon.Directed_by",
    "goldSQL": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Cartoon.Directed_by FROM Cartoon GROUP BY Cartoon.Directed_by",
    "goldSQL": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Cartoon.Production_code, Cartoon.Channel FROM TV_series JOIN Cartoon ON TV_series.id = Cartoon.Channel ORDER BY TV_series.Air_Date DESC LIMIT 1",
    "goldSQL": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date DESC LIMIT 1",
    "goldSQL": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.Hight_definition_TV = (SELECT MAX(TV_Channel.Hight_definition_TV) FROM TV_Channel)",
    "goldSQL": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.Hight_definition_TV = (SELECT MAX(TV_Channel.Hight_definition_TV) FROM TV_Channel)",
    "goldSQL": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = \"Todd Casey\"",
    "goldSQL": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = \"Todd Casey\"",
    "goldSQL": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = \"Todd Casey\"",
    "goldSQL": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = \"Todd Casey\"",
    "goldSQL": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM TV_Channel",
    "goldSQL": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT * FROM TV_Channel",
    "goldSQL": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != \"English\"",
    "goldSQL": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != \"English\"",
    "goldSQL": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.Country HAVING COUNT(*) > 2",
    "goldSQL": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING COUNT(*) > 2",
    "goldSQL": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM poker_player",
    "goldSQL": "SELECT count(*) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM poker_player",
    "goldSQL": "SELECT count(*) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings DESC",
    "goldSQL": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings DESC",
    "goldSQL": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player",
    "goldSQL": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player",
    "goldSQL": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(poker_player.Earnings) FROM poker_player",
    "goldSQL": "SELECT avg(Earnings) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(poker_player.Earnings) FROM poker_player",
    "goldSQL": "SELECT avg(Earnings) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings DESC LIMIT 1",
    "goldSQL": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings DESC LIMIT 1",
    "goldSQL": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 200000",
    "goldSQL": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 200000",
    "goldSQL": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 300000",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made ASC",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY poker_player.People_ID ORDER BY COUNT(*) ASC",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1",
    "goldSQL": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1",
    "goldSQL": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1",
    "goldSQL": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1",
    "goldSQL": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200",
    "goldSQL": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200",
    "goldSQL": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Nationality, COUNT(*) FROM people GROUP BY people.Nationality",
    "goldSQL": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Nationality, COUNT(*) FROM people GROUP BY people.Nationality",
    "goldSQL": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name ASC",
    "goldSQL": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name ASC",
    "goldSQL": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM people WHERE people.Nationality != \"Russia\"",
    "goldSQL": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM people WHERE people.Nationality != \"Russia\"",
    "goldSQL": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT people.Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID",
    "goldSQL": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT people.Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID",
    "goldSQL": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT people.Nationality) FROM people",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM people",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT people.Nationality) FROM people",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM people",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM AREA_CODE_STATE",
    "goldSQL": "SELECT count(*) FROM area_code_state",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name DESC",
    "goldSQL": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES",
    "goldSQL": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(AREA_CODE_STATE.area_code), MIN(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE",
    "goldSQL": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT VOTES.created FROM VOTES WHERE VOTES.state = \"CA\" ORDER BY VOTES.created DESC LIMIT 1",
    "goldSQL": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name != \"Jessie Alloway\"",
    "goldSQL": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT VOTES.state, VOTES.created FROM VOTES",
    "goldSQL": "SELECT DISTINCT state ,  created FROM votes",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number ORDER BY VOTES.vote_id LIMIT 1",
    "goldSQL": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM VOTES WHERE VOTES.state = \"NY\" OR VOTES.state = \"CA\"",
    "goldSQL": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN (SELECT VOTES.contestant_number FROM VOTES)",
    "goldSQL": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.area_code = VOTES.state GROUP BY AREA_CODE_STATE.area_code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name = \"Tabatha Gehling\"",
    "goldSQL": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM AREA_CODE_STATE",
    "goldSQL": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE \"% Al %\"",
    "goldSQL": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.IndepYear > 1950",
    "goldSQL": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.IndepYear > 1950",
    "goldSQL": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM country WHERE country.GovernmentForm = \"republic\"",
    "goldSQL": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM country WHERE country.GovernmentForm = \"VALUE\"",
    "goldSQL": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(country.SurfaceArea) FROM country WHERE country.Region = \"Caribbean\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(country.SurfaceArea) FROM country WHERE country.Code2 = \"Carribean\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Continent FROM country WHERE country.Name = \"Anguilla\"",
    "goldSQL": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Continent FROM country WHERE country.Name = \"Anguilla\"",
    "goldSQL": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT city.District FROM city WHERE city.Name = \"Kabul\"",
    "goldSQL": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = \"Kabul\"",
    "goldSQL": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.Language WHERE country.Name = \"Aruba\" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.Language WHERE country.Name = \"Aruba\" GROUP BY countrylanguage.Language",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = \"Brazil\"",
    "goldSQL": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = \"Brazil\"",
    "goldSQL": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Region, country.Population FROM country WHERE country.Name = \"Angola\"",
    "goldSQL": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Region, country.Population FROM country WHERE country.Name = \"Angola\"",
    "goldSQL": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Region = \"Central Africa\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Continent = \"Central Africa\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Continent = \"Asia\" AND country.LifeExpectancy = (SELECT MIN(country.LifeExpectancy) FROM country WHERE country.Continent = \"Asia\")",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Continent = \"Asia\" ORDER BY country.LifeExpectancy LIMIT 1",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(country.Population), MAX(country.GNP) FROM country WHERE country.Continent = \"Asia\"",
    "goldSQL": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(country.Population), SUM(country.GNP) FROM country WHERE country.Continent = \"Asia\"",
    "goldSQL": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Continent = \"African\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Continent = \"Africa\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT SUM(country.SurfaceArea) FROM country WHERE country.Continent = \"Asia\" OR country.Continent = \"Europe\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(country.SurfaceArea) FROM country WHERE country.Continent = \"Asia\" OR country.Continent = \"Europe\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT city.Population FROM city WHERE city.District = \"Gelderland\"",
    "goldSQL": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT SUM(city.Population) FROM city WHERE city.District = \"Gelderland\"",
    "goldSQL": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(country.GNP), AVG(country.Population) FROM country WHERE country.GovernmentForm = \"VALUE\"",
    "goldSQL": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(country.GNP), SUM(country.Population) FROM country WHERE country.GovernmentForm = \"VALUE\"",
    "goldSQL": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage",
    "goldSQL": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage",
    "goldSQL": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = \"Africa\"",
    "goldSQL": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = \"Africa\"",
    "goldSQL": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM country WHERE country.Name = \"Aruba\"",
    "goldSQL": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = \"Aruba\"",
    "goldSQL": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM country WHERE country.Name = \"Afghanistan\"",
    "goldSQL": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = \"Afghanistan\"",
    "goldSQL": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Continent FROM country GROUP BY country.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Continent FROM country GROUP BY country.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM countrylanguage WHERE countrylanguage.Language = \"English\" INTERSECT SELECT COUNT(*) FROM countrylanguage WHERE countrylanguage.Language = \"Dutch\"",
    "goldSQL": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM countrylanguage WHERE countrylanguage.Language = \"English\" INTERSECT SELECT COUNT(*) FROM countrylanguage WHERE countrylanguage.Language = \"Dutch\"",
    "goldSQL": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"Chinese\"",
    "goldSQL": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"Chinese\"",
    "goldSQL": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Region FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" OR countrylanguage.Language = \"Dutch\"",
    "goldSQL": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"Dutch\" OR countrylanguage.Language = \"English\"",
    "goldSQL": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" OR countrylanguage.Language = \"Dutch\"",
    "goldSQL": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" OR countrylanguage.Language = \"Dutch\"",
    "goldSQL": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = \"Asian\" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.Language WHERE country.Continent = \"Asian\" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language HAVING COUNT(*) = 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = \"republic\" GROUP BY countrylanguage.Language HAVING COUNT(*) = 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT city.Name FROM city WHERE city.Population = (SELECT MAX(city.Population) FROM city WHERE city.CountryCode = \"English\")",
    "goldSQL": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT city.Name FROM city WHERE city.Population = (SELECT MAX(city.Population) FROM city WHERE city.CountryCode = \"English\")",
    "goldSQL": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = \"asian\" ORDER BY country.SurfaceArea DESC LIMIT 1",
    "goldSQL": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = \"Asian\" ORDER BY country.LifeExpectancy DESC LIMIT 1",
    "goldSQL": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"English\")",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"English\")",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"English\")",
    "goldSQL": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"English\")",
    "goldSQL": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = \"Beatrix\"",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = \"Beatrix\"",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930",
    "goldSQL": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930",
    "goldSQL": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT MAX(country.SurfaceArea) FROM country WHERE country.Continent = \"Europe\")",
    "goldSQL": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Region > (SELECT MAX(country.Region) FROM country WHERE country.Continent = \"Europe\")",
    "goldSQL": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Population < (SELECT MIN(country.Population) FROM country WHERE country.Continent = \"African\") AND country.Continent = \"African\"",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Population < (SELECT MIN(country.Population) FROM country WHERE country.Continent = \"African\") AND country.Continent = \"African\"",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Population > (SELECT MAX(country.Population) FROM country WHERE country.Continent = \"Africa\") AND country.Continent = \"Asian\"",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Population > (SELECT MAX(country.Population) FROM country WHERE country.Continent = \"Africa\") AND country.Continent = \"Asian\"",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"English\"",
    "goldSQL": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"English\"",
    "goldSQL": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != \"English\"",
    "goldSQL": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"langau\" EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"English\"",
    "goldSQL": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Code FROM country WHERE country.GovernmentForm != \"English\" EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"Republic\"",
    "goldSQL": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"Republics\"",
    "goldSQL": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT city.Name FROM city WHERE city.CountryCode = \"European\" EXCEPT SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\"",
    "goldSQL": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" AND countrylanguage.Language = \"Europe\"",
    "goldSQL": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = \"Chinese\" AND countrylanguage.Language = \"Asian\"",
    "goldSQL": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = \"Asia\" INTERSECT SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = \"Chinese\"",
    "goldSQL": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country ORDER BY country.Population LIMIT 1",
    "goldSQL": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country ORDER BY country.Population LIMIT 1",
    "goldSQL": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Population, country.Name, country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1",
    "goldSQL": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1",
    "goldSQL": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name, COUNT(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode HAVING COUNT(*) >= 3",
    "goldSQL": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name, COUNT(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode HAVING COUNT(*) > 2",
    "goldSQL": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*), city.District FROM city WHERE city.Population > (SELECT AVG(city.Population) FROM city) GROUP BY city.District",
    "goldSQL": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), city.District FROM city WHERE city.Population > (SELECT AVG(city.Population) FROM city) GROUP BY city.District",
    "goldSQL": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.GovernmentForm, AVG(country.LifeExpectancy) FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > 72",
    "goldSQL": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.GovernmentForm, AVG(country.LifeExpectancy) FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > 72",
    "goldSQL": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(country.LifeExpectancy), country.Continent FROM country GROUP BY country.Continent HAVING AVG(country.LifeExpectancy) < 72",
    "goldSQL": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Continent, AVG(country.LifeExpectancy) FROM country GROUP BY country.Continent HAVING AVG(country.LifeExpectancy) < 72",
    "goldSQL": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name, country.Region FROM country ORDER BY country.SurfaceArea DESC LIMIT 5",
    "goldSQL": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name, country.SurfaceArea FROM country ORDER BY country.Region DESC LIMIT 5",
    "goldSQL": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country ORDER BY country.Population LIMIT 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country ORDER BY country.Population LIMIT 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM country WHERE country.Continent = \"Asia\"",
    "goldSQL": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM country WHERE country.Continent = \"Asia\"",
    "goldSQL": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Continent = \"Europe\" AND country.Population = 80000",
    "goldSQL": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT country.Name FROM country WHERE country.Continent = \"Europe\" AND country.Population = 80000",
    "goldSQL": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(country.Population) FROM country WHERE country.Continent = \"North America\" AND country.SurfaceArea > 3000 AND country.Continent = \"North America\"",
    "goldSQL": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT SUM(country.Population), AVG(country.SurfaceArea) FROM country WHERE country.Continent = \"North America\"",
    "goldSQL": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT city.Name FROM city WHERE city.Population BETWEEN 160000 AND 900000",
    "goldSQL": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT city.Name FROM city WHERE city.Population BETWEEN 160000 AND 900000",
    "goldSQL": "select name from city where population between 160000 and 900000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT countrylanguage.Language, MAX(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage) DESC LIMIT 1",
    "goldSQL": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.CountryCode, MAX(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.CountryCode",
    "goldSQL": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = \"Spanish\" ORDER BY countrylanguage.Percentage DESC LIMIT 1",
    "goldSQL": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM countrylanguage WHERE countrylanguage.Language = \"Spanish\" GROUP BY countrylanguage.CountryCode ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"Spanish\" ORDER BY countrylanguage.Percentage DESC LIMIT 1",
    "goldSQL": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = \"Spanish\" GROUP BY countrylanguage.CountryCode ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM conductor",
    "goldSQL": "SELECT count(*) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM conductor",
    "goldSQL": "SELECT count(*) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor ORDER BY conductor.Age ASC",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor ORDER BY conductor.Age ASC",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor WHERE conductor.Nationality != \"USA\"",
    "goldSQL": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor WHERE conductor.Nationality != \"USA\"",
    "goldSQL": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded DESC",
    "goldSQL": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded DESC",
    "goldSQL": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(show.Attendance) FROM show",
    "goldSQL": "SELECT avg(Attendance) FROM SHOW",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(show.Attendance) FROM show",
    "goldSQL": "SELECT avg(Attendance) FROM SHOW",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(performance.Share), MIN(performance.Share) FROM performance WHERE performance.Type != \"Live final\"",
    "goldSQL": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(performance.Share), MIN(performance.Share) FROM performance WHERE performance.Type != \"Live final\"",
    "goldSQL": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT conductor.Nationality) FROM conductor",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT conductor.Nationality) FROM conductor",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC LIMIT 1",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC LIMIT 1",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID",
    "goldSQL": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name, orchestra.Orchestra FROM orchestra JOIN conductor ON orchestra.Orchestra_ID = conductor.Conductor_ID",
    "goldSQL": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY orchestra.Conductor_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY orchestra.Conductor_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY orchestra.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY orchestra.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE orchestra.Year_of_Founded > 2008",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT conductor.Name FROM orchestra JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE orchestra.Year_of_Founded > 2008",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company, COUNT(*) FROM orchestra GROUP BY orchestra.Record_Company",
    "goldSQL": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company, COUNT(*) FROM orchestra GROUP BY orchestra.Record_Company",
    "goldSQL": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY COUNT(*) ASC",
    "goldSQL": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY COUNT(*) ASC",
    "goldSQL": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)",
    "goldSQL": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)",
    "goldSQL": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 2003 INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 2003",
    "goldSQL": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 2003 INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 2003",
    "goldSQL": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM orchestra WHERE orchestra.Major_Record_Format = \"CD\" OR orchestra.Major_Record_Format = \"DVD\"",
    "goldSQL": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM orchestra WHERE orchestra.Major_Record_Format = \"CD\" OR orchestra.Major_Record_Format = \"DVD\"",
    "goldSQL": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Year_of_Founded FROM performance JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID GROUP BY performance.Orchestra_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY performance.Orchestra_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler",
    "goldSQL": "SELECT count(*) FROM Highschooler",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler",
    "goldSQL": "SELECT count(*) FROM Highschooler",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name, Highschooler.grade FROM Highschooler",
    "goldSQL": "SELECT name ,  grade FROM Highschooler",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name, Highschooler.grade FROM Highschooler",
    "goldSQL": "SELECT name ,  grade FROM Highschooler",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.grade FROM Highschooler",
    "goldSQL": "SELECT grade FROM Highschooler",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.grade FROM Highschooler",
    "goldSQL": "SELECT grade FROM Highschooler",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.grade FROM Highschooler WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.grade FROM Highschooler WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 10",
    "goldSQL": "SELECT name FROM Highschooler WHERE grade  =  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 10",
    "goldSQL": "SELECT name FROM Highschooler WHERE grade  =  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler WHERE Highschooler.grade = 9 OR Highschooler.grade = 10",
    "goldSQL": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler WHERE Highschooler.grade = 9 OR Highschooler.grade = 10",
    "goldSQL": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.grade, COUNT(*) FROM Highschooler GROUP BY Highschooler.grade",
    "goldSQL": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade",
    "goldSQL": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING COUNT(*) >= 4",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING COUNT(*) >= 4",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Friend.student_id, COUNT(*) FROM Friend GROUP BY Friend.student_id",
    "goldSQL": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Friend",
    "goldSQL": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Highschooler.name, COUNT(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Friend.student_id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Likes.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Friend.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID HAVING COUNT(*) >= 3",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID HAVING COUNT(*) >= 3",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Friend.friend_id FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend",
    "goldSQL": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend",
    "goldSQL": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id",
    "goldSQL": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id",
    "goldSQL": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.ID FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id INTERSECT SELECT Likes.student_id FROM Likes",
    "goldSQL": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Friend.student_id FROM Friend INTERSECT SELECT Likes.student_id FROM Likes",
    "goldSQL": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Likes.student_id FROM Likes INTERSECT SELECT DISTINCT Likes.student_id FROM Likes",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Likes.student_id FROM Likes GROUP BY Likes.student_id",
    "goldSQL": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Likes.student_id, COUNT(*) FROM Likes GROUP BY Likes.student_id",
    "goldSQL": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name, COUNT(*) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Likes.student_id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*), Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Highschooler.ID",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Likes.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Likes.student_id FROM Likes GROUP BY Likes.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Likes.student_id FROM Likes GROUP BY Likes.student_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Likes.student_id FROM Likes GROUP BY Likes.student_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.grade > 5 AND Friend.friend_id = 2",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.grade > 5 AND Highschooler.grade != 2",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id WHERE Highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)",
    "goldSQL": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)",
    "goldSQL": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT MIN(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)",
    "goldSQL": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT MIN(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)",
    "goldSQL": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals",
    "goldSQL": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals",
    "goldSQL": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)",
    "goldSQL": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id",
    "goldSQL": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.last_name, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = \"Indiana\" UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) > 2",
    "goldSQL": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.last_name, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = \"Indiana\" UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) > 2",
    "goldSQL": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment > 1000",
    "goldSQL": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Dogs.name FROM Dogs WHERE Dogs.owner_id NOT IN (SELECT Treatments.dog_id FROM Treatments GROUP BY Treatments.dog_id HAVING MAX(Treatments.cost_of_treatment) > 1000)",
    "goldSQL": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Dogs.name FROM Dogs",
    "goldSQL": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Dogs.name FROM Dogs",
    "goldSQL": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id",
    "goldSQL": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id",
    "goldSQL": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Treatments ON Owners.owner_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Treatments ON Owners.owner_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatments.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1",
    "goldSQL": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatments.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) LIMIT 1",
    "goldSQL": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT * FROM Breeds",
    "goldSQL": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.home_phone FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.professional_id, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(Treatments.cost_of_treatment) FROM Treatments)",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(Treatments.cost_of_treatment) FROM Treatments)",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id",
    "goldSQL": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id",
    "goldSQL": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code",
    "goldSQL": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code",
    "goldSQL": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.breed_code ORDER BY MIN(Treatments.date_of_treatment) LIMIT 1",
    "goldSQL": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1",
    "goldSQL": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = \"Virginia\"",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = \"Virginia\"",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id",
    "goldSQL": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id",
    "goldSQL": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth LIMIT 1",
    "goldSQL": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth LIMIT 1",
    "goldSQL": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = \"Hawaii\" OR Professionals.state = \"Wisconsin\"",
    "goldSQL": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = \"Hawaii\" OR Professionals.state = \"Wisconsin\"",
    "goldSQL": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs",
    "goldSQL": "SELECT date_arrived ,  date_departed FROM Dogs",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs",
    "goldSQL": "SELECT date_arrived ,  date_departed FROM Dogs",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Treatments",
    "goldSQL": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments",
    "goldSQL": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Treatments.professional_id) FROM Treatments",
    "goldSQL": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(DISTINCT Treatments.professional_id) FROM Treatments",
    "goldSQL": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Professionals.role_code, Professionals.street, Professionals.state FROM Professionals WHERE Professionals.street LIKE \"% West %\"",
    "goldSQL": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.role_code, Professionals.street, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.street LIKE \"% West %\"",
    "goldSQL": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE \"% North %\"",
    "goldSQL": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE \"% North %\"",
    "goldSQL": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Dogs WHERE Dogs.age < (SELECT AVG(Dogs.age) FROM Dogs)",
    "goldSQL": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Dogs WHERE Dogs.age < (SELECT AVG(Dogs.age) FROM Dogs)",
    "goldSQL": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment DESC LIMIT 1",
    "goldSQL": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment DESC LIMIT 1",
    "goldSQL": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)",
    "goldSQL": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)",
    "goldSQL": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)",
    "goldSQL": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)",
    "goldSQL": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)",
    "goldSQL": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)",
    "goldSQL": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = \"yes\" AND Dogs.abandoned_yn = 1",
    "goldSQL": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = \"yes\" AND Dogs.abandoned_yn = 0",
    "goldSQL": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT AVG(Dogs.age) FROM Dogs",
    "goldSQL": "SELECT avg(age) FROM Dogs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT AVG(Dogs.age) FROM Dogs",
    "goldSQL": "SELECT avg(age) FROM Dogs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(Dogs.age) FROM Dogs",
    "goldSQL": "SELECT max(age) FROM Dogs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Dogs.age FROM Dogs ORDER BY Dogs.date_of_birth DESC LIMIT 1",
    "goldSQL": "SELECT max(age) FROM Dogs",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Charges.charge_type, SUM(Charges.charge_amount) FROM Charges GROUP BY Charges.charge_type",
    "goldSQL": "SELECT charge_type ,  charge_amount FROM Charges",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Charges.charge_type, Charges.charge_amount FROM Charges",
    "goldSQL": "SELECT charge_type ,  charge_amount FROM Charges",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(Charges.charge_amount) FROM Charges ORDER BY Charges.charge_amount DESC LIMIT 1",
    "goldSQL": "SELECT max(charge_amount) FROM Charges",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Charges.charge_amount FROM Charges ORDER BY Charges.charge_type DESC LIMIT 1",
    "goldSQL": "SELECT max(charge_amount) FROM Charges",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.email_address, Professionals.home_phone, Professionals.cell_number FROM Professionals",
    "goldSQL": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Professionals.email_address, Professionals.home_phone, Professionals.cell_number FROM Professionals",
    "goldSQL": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT Breeds.breed_name, Breeds.breed_name FROM Breeds",
    "goldSQL": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT DISTINCT Breeds.breed_name, Dogs.size_code FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code",
    "goldSQL": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.first_name, Treatments.date_of_treatment FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Professionals.first_name, Professionals.role_code FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions ASC",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions ASC",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Birth_Year, singer.Citizenship FROM singer",
    "goldSQL": "SELECT Birth_Year ,  Citizenship FROM singer",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Birth_Year, singer.Citizenship FROM singer",
    "goldSQL": "SELECT Birth_Year ,  Citizenship FROM singer",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer WHERE singer.Citizenship != \"France\"",
    "goldSQL": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer WHERE singer.Citizenship != \"French\"",
    "goldSQL": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer WHERE singer.Birth_Year = 1948 OR singer.Birth_Year = 1949",
    "goldSQL": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer WHERE singer.Birth_Year = 1948 OR singer.Birth_Year = 1949",
    "goldSQL": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions DESC LIMIT 1",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions DESC LIMIT 1",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Citizenship, COUNT(*) FROM singer GROUP BY singer.Citizenship",
    "goldSQL": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Citizenship, COUNT(*) FROM singer GROUP BY singer.Citizenship",
    "goldSQL": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "goldSQL": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Citizenship, MAX(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship",
    "goldSQL": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT MAX(singer.Net_Worth_Millions), singer.Citizenship FROM singer GROUP BY singer.Citizenship",
    "goldSQL": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT song.Title, singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID",
    "goldSQL": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID",
    "goldSQL": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000",
    "goldSQL": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000",
    "goldSQL": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING COUNT(*) > 1",
    "goldSQL": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT singer.Name, SUM(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name",
    "goldSQL": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT SUM(song.Sales), singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name",
    "goldSQL": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)",
    "goldSQL": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)",
    "goldSQL": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 1945 INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 1955",
    "goldSQL": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 1945 INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 1955",
    "goldSQL": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT COUNT(*) FROM Other_Available_Features",
    "goldSQL": "SELECT count(*) FROM Other_Available_Features",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features ON Ref_Feature_Types.feature_type_code = Other_Available_Features.feature_type_code WHERE Other_Available_Features.feature_name = \"AirCon\"",
    "goldSQL": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true
  },
  {
    "predictSQL": "SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types JOIN Properties ON Ref_Property_Types.property_type_code = Properties.property_type_code",
    "goldSQL": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false
  },
  {
    "predictSQL": "SELECT Properties.property_name FROM Properties WHERE Properties.room_count > 1 OR Properties.room_count > 1",
    "goldSQL": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false
  }
]