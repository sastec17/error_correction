[
  {
    "predictSQL": "select count ( * ) from singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name, singer.country, singer.age from singer order by singer.age desc",
    "goldSQL": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name, singer.country, singer.age from singer order by singer.age desc",
    "goldSQL": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( singer.age ), min ( singer.age ), max ( singer.age ) from singer where singer.country = \"France\"",
    "goldSQL": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( singer.age ), min ( singer.age ), max ( singer.age ) from singer where singer.name like \"%French%\"",
    "goldSQL": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.song_name, singer.song_release_year from singer order by singer.song_release_year asc limit 1",
    "goldSQL": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.song_name, singer.song_release_year from singer order by singer.age asc limit 1",
    "goldSQL": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct singer.country from singer where singer.age > 20",
    "goldSQL": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct singer.country from singer except select distinct singer.country from singer where singer.age > 20",
    "goldSQL": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.country, count ( * ) from singer group by singer.country",
    "goldSQL": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.country, count ( * ) from singer group by singer.country",
    "goldSQL": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.song_name from singer where singer.age > ( select avg ( singer.age ) from singer )",
    "goldSQL": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.song_name from singer where singer.age > ( select avg ( singer.age ) from singer )",
    "goldSQL": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.location, stadium.name from stadium where stadium.capacity between 5000 and 10000",
    "goldSQL": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.location, stadium.name from stadium where stadium.capacity between 5000 and 10000",
    "goldSQL": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.capacity, stadium.average from stadium",
    "goldSQL": "select max(capacity), average from stadium",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select stadium.capacity, avg ( stadium.capacity ), max ( stadium.capacity ) from stadium",
    "goldSQL": "select avg(capacity) ,  max(capacity) from stadium",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select stadium.name, stadium.capacity from stadium order by stadium.average desc limit 1",
    "goldSQL": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.name, stadium.capacity from stadium order by stadium.average desc limit 1",
    "goldSQL": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from concert where concert.year = 2014",
    "goldSQL": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from concert where concert.year = 2014 or concert.year = 2015",
    "goldSQL": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.name, count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by concert.stadium_id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select stadium.name, count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by stadium.stadium_id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select stadium.name, stadium.capacity from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year >= 2014 group by stadium.stadium_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select stadium.name, stadium.capacity from stadium join concert on stadium.stadium_id = concert.stadium_id where concert.year > 2013 group by stadium.stadium_id order by count ( * ) desc limit 1",
    "goldSQL": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select concert.year from concert group by concert.year order by count ( * ) desc limit 1",
    "goldSQL": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select concert.year from concert group by concert.year order by count ( * ) desc limit 1",
    "goldSQL": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.name from stadium where stadium.stadium_id not in ( select concert.stadium_id from concert )",
    "goldSQL": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.name from stadium where stadium.stadium_id not in ( select concert.stadium_id from concert )",
    "goldSQL": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.country from singer where singer.age > 40 intersect select singer.country from singer where singer.age < 30",
    "goldSQL": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.name from stadium except select stadium.name from stadium join concert on stadium.stadium_id = concert.stadium_id where concert.year = 2014",
    "goldSQL": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select stadium.name from stadium where stadium.stadium_id not in ( select concert.stadium_id from concert where concert.year = 2014 )",
    "goldSQL": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select concert.concert_name, concert.theme, count ( * ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by concert.concert_name",
    "goldSQL": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select concert.theme, count ( * ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by concert.theme",
    "goldSQL": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name, count ( * ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by singer.name",
    "goldSQL": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name, count ( * ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by singer.name",
    "goldSQL": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name from concert join singer_in_concert on concert.concert_id = singer_in_concert.singer_id join singer on singer_in_concert.singer_id = singer.singer_id where concert.year = 2014",
    "goldSQL": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id join concert on singer_in_concert.concert_id = concert.concert_id where concert.year = 2014",
    "goldSQL": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name, singer.nation from singer join singer_in_singer on singer.singer_id = singer_in_singer.singer_id join song on singer_in_singer.singer_id = singer.singer_id where song.song_name like \"%Hey%\"",
    "goldSQL": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name, singer.country from singer where singer.song_name like \"%Hey%\"",
    "goldSQL": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select stadium.name, stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014 intersect select stadium.name, stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2015",
    "goldSQL": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select stadium.name, stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014 intersect select stadium.name, stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2015",
    "goldSQL": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct concert.concert_name ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id join stadium on stadium.stadium_id = singer_in_concert.stadium_id",
    "goldSQL": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id join stadium on concert.stadium_id = stadium.stadium_id group by concert.stadium_id order by sum ( stadium.capacity ) desc limit 1",
    "goldSQL": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from pets where pets.weight > 10",
    "goldSQL": "SELECT count(*) FROM pets WHERE weight  >  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from pets where pets.weight > 10",
    "goldSQL": "SELECT count(*) FROM pets WHERE weight  >  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select pets.weight from pets where pets.pettype = \"dog\" and pets.pet_age = ( select min ( pets.pet_age ) from pets where pets.pettype = \"dog\" )",
    "goldSQL": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select min ( pets.weight ) from pets where pets.pettype = \"dog\"",
    "goldSQL": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select max ( pets.weight ), pets.pettype from pets group by pets.pettype",
    "goldSQL": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( pets.weight ), pets.pettype from pets group by pets.pettype",
    "goldSQL": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct pets.petid ) from pets join has_pet on pets.petid = has_pet.petid join student on has_pet.stuid = student.stuid where student.age > 20",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct has_pet.petid ) from has_pet join pets on has_pet.petid = pets.petid where student.age > 20",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from pets join has_pet on pets.petid = has_pet.petid join student on has_pet.stuid = student.stuid where student.sex = \"F\"",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from pets join has_pet on pets.petid = has_pet.petid join student on has_pet.stuid = student.stuid where student.sex = \"F\"",
    "goldSQL": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct pets.pettype ) from pets",
    "goldSQL": "SELECT count(DISTINCT pettype) FROM pets",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct pets.pettype ) from pets",
    "goldSQL": "SELECT count(DISTINCT pettype) FROM pets",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select student.fname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\" or has_pet.pettype = \"dog\"",
    "goldSQL": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select student.fname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\" or has_pet.pettype = \"dog\"",
    "goldSQL": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.fname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\" intersect select student.fname from student join has_pet on student.stuid = has_pet.stuid where pets.pettype = \"dog\"",
    "goldSQL": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.fname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\" intersect select student.fname from student join has_pet on student.stuid = has_pet.stuid where pets.pettype = \"dog\"",
    "goldSQL": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.major, student.age from student where student.stuid not in ( select has_pet.stuid from has_pet where has_pet.pettype = \"cat\" )",
    "goldSQL": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.major, sum ( student.age ) from student where student.stuid not in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = \"cat\" )",
    "goldSQL": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.stuid from student except select has_pet.stuid from has_pet where has_pet.pettype = \"cat\"",
    "goldSQL": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.stuid from student except select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = \"cat\"",
    "goldSQL": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"dog\" except select student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\"",
    "goldSQL": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.fname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"dog\" except select student.fname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\"",
    "goldSQL": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select pets.pettype, pets.weight from pets order by pets.pet_age asc limit 1",
    "goldSQL": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select pets.pettype, pets.weight from pets order by pets.pet_age asc limit 1",
    "goldSQL": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select pets.petid, pets.weight from pets where pets.pet_age > 1",
    "goldSQL": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select pets.petid, pets.weight from pets where pets.pet_age > 1",
    "goldSQL": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select pets.pettype, avg ( pets.pet_age ), max ( pets.pet_age ) from pets group by pets.pettype",
    "goldSQL": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select pets.pettype, avg ( pets.pet_age ), max ( pets.pet_age ) from pets group by pets.pettype",
    "goldSQL": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select pets.pettype, avg ( pets.weight ) from pets group by pets.pettype",
    "goldSQL": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select pets.pettype, avg ( pets.weight ) from pets group by pets.pettype",
    "goldSQL": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid",
    "goldSQL": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid",
    "goldSQL": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select has_pet.petid from has_pet join student on has_pet.stuid = student.stuid where student.lname = \"Smith\"",
    "goldSQL": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select has_pet.petid from has_pet join student on has_pet.stuid = student.stuid where student.lname = \"Smith\"",
    "goldSQL": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), student.stuid from student join has_pet on student.stuid = has_pet.stuid group by student.stuid",
    "goldSQL": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), student.stuid from student join has_pet on student.stuid = has_pet.stuid group by student.stuid",
    "goldSQL": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select student.fname, student.sex from student join has_pet on student.stuid = has_pet.stuid group by has_pet.stuid having count ( * ) > 1",
    "goldSQL": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select student.fname, student.sex from student join has_pet on student.stuid = has_pet.stuid group by has_pet.stuid having count ( * ) > 1",
    "goldSQL": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select student.lname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\" and has_pet.pet_age = 3",
    "goldSQL": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student.lname from student join has_pet on student.stuid = has_pet.stuid where has_pet.pettype = \"cat\" and has_pet.pet_age = 3",
    "goldSQL": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( student.age ) from student where student.stuid not in ( select has_pet.stuid from has_pet )",
    "goldSQL": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( student.age ) from student where student.stuid not in ( select has_pet.stuid from has_pet )",
    "goldSQL": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from continents",
    "goldSQL": "SELECT count(*) FROM CONTINENTS;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from continents",
    "goldSQL": "SELECT count(*) FROM CONTINENTS;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select continents.continent, countries.countryname, count ( * ) from countries join continents on countries.continent = continents.continent group by countries.continent",
    "goldSQL": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select continents.continent, countries.countryid, count ( * ) from countries join continents on countries.continent = continents.content group by countries.continent",
    "goldSQL": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countries",
    "goldSQL": "SELECT count(*) FROM COUNTRIES;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from countries",
    "goldSQL": "SELECT count(*) FROM COUNTRIES;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select car_makers.fullname, model_list.modelid, count ( * ) from car_makers join model_list on car_makers.id = model_list.modelid group by model_list.modelid",
    "goldSQL": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.fullname, model_list.modelid, count ( * ) from car_makers join model_list on car_makers.id = model_list.modelid group by model_list.modelid",
    "goldSQL": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select model_list.model from cars_data join model_list on cars_data.model = model_list.modelid where cars_data.horsepower = ( select min ( cars_data.horsepower ) from cars_data )",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_names.model from cars_data order by cars_data.horsepower asc limit 1",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select car_names.model from cars_data join car_names on cars_data.make = car_names.makeid where cars_data.weight < ( select avg ( cars_data.weight ) from cars_data )",
    "goldSQL": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select model_list.model from cars_data join model_list on cars_data.model = model_list.modelid where cars_data.weight < ( select avg ( cars_data.weight ) from cars_data )",
    "goldSQL": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.fullname from car_makers join cars_data on car_makers.id = cars_data.makeid where cars_data.year = 1970",
    "goldSQL": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct car_makers.fullname from car_makers join car_names on car_makers.id = car_names.makeid where car_names.year = 1970",
    "goldSQL": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_names.make, car_names.production from cars_data join model_list on cars_data.model = model_list.modelid join car_names on cars_data.makeid = car_names.makeid order by cars_data.year asc limit 1",
    "goldSQL": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.maker, cars_data.year from cars_data order by cars_data.year asc limit 1",
    "goldSQL": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct car_names.model from car_names join model_list on car_names.modelid = model_list.modelid where model_list.year > 1980",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct model_list.model from model_list join car_makers on model_list.modelid = car_makers.id where car_makers.year > 1980",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select continents.continent, count ( * ) from continents join car_makers on continents.continent = car_makers.id group by continents.continent",
    "goldSQL": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.fullname, count ( * ) from car_makers join continents on car_makers.continent = continents.contid group by car_makers.continent",
    "goldSQL": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), car_makers.fullname from car_makers join model_list on car_makers.id = model_list.modelid group by car_makers.maker",
    "goldSQL": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), car_makers.id, car_makers.fullname from car_makers join model_list on car_makers.id = model_list.modelid group by car_makers.id",
    "goldSQL": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select cars_data.accelerate from cars_data where cars_data.make = \"amc\" and cars_data.hornet sportabout = \"sw\"",
    "goldSQL": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select cars_data.accelerate from cars_data where cars_data.model = \"amc\" and cars_data.make = \"hornet\" and cars_data.horsepower = \"sw\"",
    "goldSQL": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countries join car_makers on countries.countryid = car_makers.country where countries.countryname = \"france\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countries join car_makers on countries.countryid = car_makers.country where countries.countryname = \"france\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countries join car_makers on countries.countryid = car_makers.country where countries.countryname = \"usa\"",
    "goldSQL": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from car_names join model_list on car_names.model = model_list.model where car_names.make = \"United States\"",
    "goldSQL": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( cars_data.mpg ) from cars_data where cars_data.cylinders = 4",
    "goldSQL": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( cars_data.mpg ) from cars_data where cars_data.cylinders = 4",
    "goldSQL": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select min ( cars_data.weight ) from cars_data where cars_data.cylinders = 8 and cars_data.year = 1974",
    "goldSQL": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select min ( cars_data.weight ) from cars_data where cars_data.cylinders = 8 and cars_data.year = 1974",
    "goldSQL": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select car_makers.maker, model_list.model from car_makers join model_list on car_makers.id = model_list.makeid",
    "goldSQL": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.maker, model_list.model from car_makers join model_list on car_makers.id = model_list.makeid",
    "goldSQL": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countries.countryname, car_makers.id from countries join car_makers on countries.countryid = car_makers.country group by car_makers.id having count ( * ) >= 1",
    "goldSQL": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select countries.countryname, countries.countryid from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) >= 1",
    "goldSQL": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.horsepower > 150",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.horsepower > 150",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( cars_data.weight ), cars_data.year from cars_data group by cars_data.year",
    "goldSQL": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( cars_data.weight ), cars_data.year from cars_data group by cars_data.year",
    "goldSQL": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select countries.countryname from countries join continents on countries.continent = continents.continent where continents.continent = \"europe\" and count ( * ) >= 3",
    "goldSQL": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select countries.countryname from countries join continents on countries.continent = continents.continent where continents.continent = \"europe\" group by countries.countryid having count ( * ) >= 3",
    "goldSQL": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select max ( cars_data.horsepower ), car_names.make from cars_data join model_list on cars_data.model = model_list.model join car_names on cars_data.makeid = model_list.makeid group by car_names.make",
    "goldSQL": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select max ( cars_data.horsepower ), model_list.make from cars_data join model_list on cars_data.model = model_list.model group by model_list.make order by count ( * ) desc limit 3",
    "goldSQL": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select model_list.model from model_list group by model_list.model order by sum ( cars_data.mpg ) desc limit 1",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_names.model from cars_data join model_list on cars_data.model = model_list.modelid group by car_names.model order by sum ( cars_data.mpg ) desc limit 1",
    "goldSQL": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( cars_data.horsepower ) from cars_data where cars_data.year < 1980",
    "goldSQL": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( cars_data.horsepower ) from cars_data where cars_data.year < 1980",
    "goldSQL": "select avg(horsepower) from cars_data where year  <  1980;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( cars_data.edspl ) from cars_data where cars_data.model = \"volvo\"",
    "goldSQL": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( cars_data.edspl ) from cars_data where cars_data.model = \"volvo\"",
    "goldSQL": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( cars_data.accelerate ), cars_data.cylinders from cars_data group by cars_data.cylinders",
    "goldSQL": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( cars_data.accelerate ), cars_data.cylinders from cars_data",
    "goldSQL": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select model_list.model from model_list join cars_data on model_list.modelid = cars_data.modelid group by model_list.model order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select model_list.model from model_list group by model_list.model order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.cylinders > 4",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.cylinders > 4",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.year = 1980",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.year = 1980",
    "goldSQL": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from car_makers join model_list on car_makers.id = model_list.modelid where car_makers.fullname = \"American Motor Company\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from car_makers join model_list on car_makers.id = model_list.modelid where car_makers.fullname = \"American Motor Company\"",
    "goldSQL": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.fullname, car_makers.id from car_makers join model_list on car_makers.id = model_list.modelid group by car_makers.maker having count ( * ) > 3",
    "goldSQL": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.fullname, car_makers.id from car_makers join model_list on car_makers.id = model_list.makeid group by model_list.make having count ( * ) > 3",
    "goldSQL": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct model_list.model from model_list join car_makers on model_list.modelid = car_makers.id where car_makers.fullname = \"General Motors\" or car_makers.weight > 3500",
    "goldSQL": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct model_list.model from model_list join car_makers on model_list.maker = car_makers.id where car_makers.fullname = \"General Motors\" or cars_data.weight > 3500",
    "goldSQL": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select cars_data.year from cars_data where cars_data.weight < 3000 intersect select cars_data.year from cars_data where cars_data.weight > 4000",
    "goldSQL": "select distinct year from cars_data where weight between 3000 and 4000;",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct cars_data.year from cars_data where cars_data.weight < 4000 intersect select distinct cars_data.year from cars_data where cars_data.winner > 3000",
    "goldSQL": "select distinct year from cars_data where weight between 3000 and 4000;",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select cars_data.horsepower from cars_data order by cars_data.accelerate desc limit 1",
    "goldSQL": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cars_data.horsepower from cars_data order by cars_data.accelerate desc limit 1",
    "goldSQL": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), cars_data.cylinders from cars_data where cars_data.accelerate = ( select min ( cars_data.accelerate ) from cars_data where cars_data.model = \"volvo\" )",
    "goldSQL": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), cars_data.cylinders from cars_data where cars_data.accelerate = ( select min ( cars_data.accelerate ) from cars_data where cars_data.model = \"volvo\" )",
    "goldSQL": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.accelerate > ( select max ( cars_data.accelerate ) from cars_data )",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.accelerate > ( select max ( cars_data.accelerate ) from cars_data where cars_data.horsepower = ( select min ( cars_data.horsepower ) from cars_data )",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 2",
    "goldSQL": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 2",
    "goldSQL": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.cylinders > 6",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cars_data where cars_data.cylinders > 6",
    "goldSQL": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select car_names.model from car_names join cars_data on car_names.modelid = cars_data.modelid where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 4",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select cars_data.cylinders from cars_data group by cars_data.cylinders order by sum ( cars_data.horsepower ) desc limit 4",
    "goldSQL": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select cars_data.makeid, car_names.make from cars_data where cars_data.horsepower > ( select min ( cars_data.cylinders ) from cars_data group by cars_data.makeid having count ( * ) > 3 )",
    "goldSQL": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select cars_data.makeid, car_names.make from cars_data where cars_data.horsepower < 4",
    "goldSQL": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( cars_data.mpg ) from cars_data where cars_data.cylinders >= 8 union select max ( cars_data.mpg ) from cars_data where cars_data.year < 1980",
    "goldSQL": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select max ( cars_data.mpg ) from cars_data where cars_data.cylinders = 8 union select max ( cars_data.mpg ) from cars_data where cars_data.year < 1980",
    "goldSQL": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select model_list.model from model_list where model_list.year < 3500 except select model_list.model from model_list join car_makers on model_list.maker = car_makers.id where car_makers.fullname = \"Ford Motor Company\"",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct model_list.model from model_list where model_list.weight > 3500 and car_makers.fullname = \"Ford Motor Company\"",
    "goldSQL": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select countries.countryname from countries join car_makers on countries.countryid = car_makers.country where car_makers.maker!= 1",
    "goldSQL": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countries.countryname from countries where countries.countryid not in ( select car_makers.country from car_makers )",
    "goldSQL": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select model_list.modelid, car_makers.maker from model_list join car_makers on model_list.modelid = car_makers.id group by model_list.modelid having count ( * ) >= 2 intersect select car_makers.id, car_makers.maker from car_makers group by car_makers.maker having count ( * ) >= 3",
    "goldSQL": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select car_makers.id, car_makers.maker from car_makers join model_list on car_makers.id = model_list.modelid group by model_list.model having count ( * ) >= 2 intersect select car_makers.id, car_makers.maker from car_makers join cars_data on car_makers.id = cars_data.id group by cars_data.maker having count ( * ) > 3",
    "goldSQL": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countries.countryid, countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 3 union select countries.countryid, countries.countryname from countries join model_list on countries.countryid = model_list.countryid where model_list.model = \"fiat\"",
    "goldSQL": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countries.countryid, countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 3 union select countries.countryid, countries.countryname from countries join model_list on countries.countryid = model_list.countryid where model_list.model = \"Fiat\"",
    "goldSQL": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airlines.country from airlines where airlines.airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airlines.country from airlines where airlines.airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select airlines.abbreviation from airlines where airlines.airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airlines.abbreviation from airlines where airlines.airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airlines.airline, airlines.abbreviation from airlines where airlines.country = \"USA\"",
    "goldSQL": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airlines.airline, airlines.abbreviation from airlines where airlines.country = \"USA\"",
    "goldSQL": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.airportcode, airports.airportname from airports where airports.city = \"Anthony \"",
    "goldSQL": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.airportcode, airports.airportname from airports where airports.city = \"Anthony\"",
    "goldSQL": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from airlines",
    "goldSQL": "SELECT count(*) FROM AIRLINES",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from airlines",
    "goldSQL": "SELECT count(*) FROM AIRLINES",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from airports",
    "goldSQL": "SELECT count(*) FROM AIRPORTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from airports",
    "goldSQL": "SELECT count(*) FROM AIRPORTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from flights",
    "goldSQL": "SELECT count(*) FROM FLIGHTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from flights",
    "goldSQL": "SELECT count(*) FROM FLIGHTS",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airlines.airline from airlines where airlines.abbreviation = \"UAL\"",
    "goldSQL": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airlines.airline from airlines where airlines.abbreviation = \"UAL\"",
    "goldSQL": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from airlines where airlines.country = \"USA\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from airlines where airlines.country = \"USA\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.city, airports.country from airports where airports.airportname = \"Alton \"",
    "goldSQL": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.city, airports.country from airports where airports.airportname = \"Alton\"",
    "goldSQL": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.airportname from airports where airports.airportcode = \"AKO\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.airportname from airports where airports.airportcode = \"AKO\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.airportname from airports where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.airportname from airports where airports.country = \"Aberdeen\"",
    "goldSQL": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from flights where flights.sourceairport = \"APG\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from flights where flights.sourceairport = \"APG\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.airportcode = \"TO\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from flights join airports on flights.sourceairport = airports.city where airports.airportcode = \"ATO\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.city = \"Aberdeen\" intersect select count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = \"Ashley\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\" and airports.city = \"Ashley\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from flights join airlines on flights.airline = airlines.uid where airlines.airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airlines join flights on airlines.uid = flights.sourceairport where airlines.airline = \"JetBlue Airways\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airlines join flights on airlines.uid = flights.sourceairport join airports on flights.airport = airports.airportid where airlines.airline = \"United Airlines\" and airports.airportcode = \"ASY\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airlines join flights on airlines.uid = flights.sourceairport join airports on flights.airport = airports.airportid where airports.airportcode = \"ASY\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airlines join flights on airlines.uid = flights.sourceairport where airlines.airline = \"United Airlines\" and flights.destairport = \"AHD\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airlines join flights on airlines.uid = flights.sourceairline where airlines.airline = \"United Airlines\" and flights.destairport = \"AHD\"",
    "goldSQL": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airlines join flights on airlines.uid = flights.sourceairport join airports on flights.airport = airports.airportcode where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airlines join flights on airlines.uid = flights.sourceairport join airports on flights.airport = airports.airportcode where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.city from flights join airports on flights.sourceairport = airports.city group by flights.sourceairport order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.city from airports group by airports.city order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select airports.city from flights join airports on flights.sourceairport = airports.city group by flights.sourceairport order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.city from flights join airports on flights.sourceairport = airports.city group by flights.sourceairport order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.airportcode from airports join flights on airports.airportcode = flights.sourceairport group by flights.sourceairport order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.airportcode from airports join flights on airports.airportcode = flights.sourceairport group by flights.sourceairport order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.airportcode from airports join flights on airports.airportcode = flights.sourceairport group by flights.sourceairport order by count ( * ) asc limit 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.airportcode from airports join flights on airports.airportcode = flights.sourceairport group by flights.sourceairport order by count ( * ) asc limit 1",
    "goldSQL": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select airlines.airline from flights join airlines on flights.airline = airlines.uid group by flights.airline order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airlines.airline from flights join airlines on flights.sourceairport = airlines.uid group by flights.airline order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airlines.abbreviation, airlines.country from airlines join flights on airlines.uid = flights.airline group by flights.airline order by count ( * ) asc limit 1",
    "goldSQL": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airlines.abbreviation, airlines.country from airlines join flights on airlines.uid = flights.airline group by flights.airline order by count ( * ) limit 1",
    "goldSQL": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct flights.airline from flights join airlines on flights.airline = airlines.uid where flights.sourceairport = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from flights join airlines on flights.airline = airlines.uid where flights.sourceairport = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from flights join airlines on flights.airline = airlines.uid join airports on flights.sourceairport = airports.airportcode where airports.airportcode = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.destairport = \"AHD\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from flights join airlines on flights.airline = airlines.uid join airports on flights.sourceairport = airports.airportcode where airports.airportcode = \"APG\" intersect select airlines.airline from flights join airlines on flights.airline = airlines.uid join airports on flights.sourceairport = airports.airportcode where airports.airportcode = \"CVO\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = \"APG\" intersect select airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.destairport = \"CVVO\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = \"CVO\" except select distinct airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = \"APG\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = \"CVY\" except select distinct airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = \"APG\"",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from flights join airlines on flights.airline = airlines.uid group by flights.airline having count ( * ) >= 10",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from flights join airlines on flights.airline = airlines.uid group by flights.airline having count ( * ) >= 10",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct airlines.airline from flights join airlines on flights.airline = airlines.uid group by flights.airline having count ( * ) < 200",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airlines.airline from flights join airlines on flights.airline = airlines.uid group by flights.airline having count ( * ) < 200",
    "goldSQL": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select flights.flightno from flights join airlines on flights.airline = airlines.uid where airlines.airline = \"United Airlines\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select flights.flightno from flights join airlines on flights.airline = airlines.uid where airlines.airline = \"United Airlines\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select flights.flightno from flights where flights.sourceairport = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select flights.flightno from flights where flights.destairport = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select flights.flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.airportcode = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select flights.flightno from flights where flights.sourceairport = \"APG\"",
    "goldSQL": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select flights.flightno from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select flights.flightno from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select flights.flightno from airlines join flights on airlines.uid = flights.sourceairport join airports on flights.airportcode = airports.airportcode where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select flights.flightno from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\"",
    "goldSQL": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\" or airports.city = \"Abilene\"",
    "goldSQL": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = \"Aberdeen\" or airports.city = \"Abilene\"",
    "goldSQL": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.airportname from airports where airports.airportcode not in ( select flights.sourceairport from flights )",
    "goldSQL": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select airports.airportname from airports except select airports.airportname from flights join airports on flights.sourceairport = airports.city",
    "goldSQL": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from employee",
    "goldSQL": "SELECT count(*) FROM employee",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from employee",
    "goldSQL": "SELECT count(*) FROM employee",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.name from employee order by employee.age asc",
    "goldSQL": "SELECT name FROM employee ORDER BY age",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.name from employee order by employee.age asc",
    "goldSQL": "SELECT name FROM employee ORDER BY age",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.city, count ( * ) from employee group by employee.city",
    "goldSQL": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.city, count ( * ) from employee group by employee.city",
    "goldSQL": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.city from employee where employee.age < 30 group by employee.city having count ( * ) > 1",
    "goldSQL": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select employee.city from employee where employee.age < 30 group by employee.city having count ( * ) > 1",
    "goldSQL": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select shop.location, count ( * ) from shop group by shop.location",
    "goldSQL": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.location, count ( * ) from shop group by shop.location",
    "goldSQL": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.manager_name, shop.district from shop order by shop.number_products desc limit 1",
    "goldSQL": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.manager_name, shop.district from shop order by shop.number_products desc limit 1",
    "goldSQL": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select min ( shop.number_products ), max ( shop.number_products ) from shop",
    "goldSQL": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select min ( shop.number_products ), max ( shop.number_products ) from shop",
    "goldSQL": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.name, shop.location, shop.district from shop order by shop.number_products desc",
    "goldSQL": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.name, shop.location, shop.district from shop order by shop.number_products desc",
    "goldSQL": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.manager_name from shop where shop.number_products > ( select avg ( shop.number_products ) from shop )",
    "goldSQL": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.name from shop where shop.number_products > ( select avg ( shop.number_products ) from shop )",
    "goldSQL": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id group by evaluation.year_awarded order by count ( * ) desc limit 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id group by evaluation.employee_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id group by evaluation.employee_id order by sum ( evaluation.bonus ) desc limit 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id order by evaluation.bonus desc limit 1",
    "goldSQL": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select employee.name from employee except select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id",
    "goldSQL": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select employee.name from employee where employee.employee_id not in ( select evaluation.employee_id from evaluation )",
    "goldSQL": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by hiring.shop_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.name from shop join employee on shop.shop_id = employee.employee_id group by shop.shop_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.name from shop where shop.shop_id not in ( select hiring.shop_id from hiring )",
    "goldSQL": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.name from shop where shop.shop_id not in ( select employee.employee_id from employee )",
    "goldSQL": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), shop.manager_name from hiring join shop on hiring.shop_id = shop.shop_id group by shop.manager_name",
    "goldSQL": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select shop.name, count ( * ) from shop join employee on shop.shop_id = employee.employee_id group by shop.name",
    "goldSQL": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select sum ( evaluation.bonus ) from evaluation",
    "goldSQL": "SELECT sum(bonus) FROM evaluation",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select sum ( evaluation.bonus ) from evaluation",
    "goldSQL": "SELECT sum(bonus) FROM evaluation",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select * from hiring",
    "goldSQL": "SELECT * FROM hiring",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select * from hiring",
    "goldSQL": "SELECT * FROM hiring",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.district from shop where shop.number_products < 3000 intersect select shop.district from shop where shop.number_products > 10000",
    "goldSQL": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select shop.district from shop where shop.number_products < 3000 intersect select shop.district from shop where shop.number_products > 10000",
    "goldSQL": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct shop.location ) from shop",
    "goldSQL": "SELECT count(DISTINCT LOCATION) FROM shop",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct shop.location ) from shop",
    "goldSQL": "SELECT count(DISTINCT LOCATION) FROM shop",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from documents",
    "goldSQL": "SELECT count(*) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from documents",
    "goldSQL": "SELECT count(*) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id, documents.document_name, documents.document_description from documents",
    "goldSQL": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id, documents.document_name, documents.document_description from documents",
    "goldSQL": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_name, documents.template_id from documents where documents.document_description like \"%w%\"",
    "goldSQL": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_name, documents.template_id from documents where documents.document_description like \"%w%\"",
    "goldSQL": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select documents.document_id, documents.template_id, documents.document_description from documents where documents.document_name = \"Robbin CV\"",
    "goldSQL": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id, documents.template_id, documents.document_description from documents where documents.document_name = \"Robbin CV\"",
    "goldSQL": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct documents.template_id ) from documents",
    "goldSQL": "SELECT count(DISTINCT template_id) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct documents.template_id ) from documents",
    "goldSQL": "SELECT count(DISTINCT template_id) FROM Documents",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from templates join documents on templates.template_id = documents.template_id where templates.template_type_code = \"PPT\"",
    "goldSQL": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = \"PPT\"",
    "goldSQL": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select documents.template_id, count ( * ) from documents group by documents.template_id",
    "goldSQL": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.template_id, count ( * ) from documents group by documents.template_id",
    "goldSQL": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.template_id, templates.template_type_code from documents join templates on documents.template_id = templates.template_id group by documents.template_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select documents.template_id, templates.template_type_code from documents join templates on documents.template_id = templates.template_id group by documents.template_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.template_id from documents group by documents.template_id having count ( * ) > 1",
    "goldSQL": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.template_id from documents group by documents.template_id having count ( * ) > 1",
    "goldSQL": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_id from templates except select documents.template_id from documents",
    "goldSQL": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_id from templates except select documents.template_id from documents",
    "goldSQL": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from templates",
    "goldSQL": "SELECT count(*) FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from templates",
    "goldSQL": "SELECT count(*) FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_id, templates.version_number, templates.template_type_code from templates",
    "goldSQL": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_id, templates.version_number, templates.template_type_code from templates",
    "goldSQL": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct templates.template_type_code from templates",
    "goldSQL": "SELECT DISTINCT template_type_code FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct templates.template_type_code from templates",
    "goldSQL": "SELECT DISTINCT template_type_code FROM Templates",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_id from templates where templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"",
    "goldSQL": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select templates.template_id from templates where templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"",
    "goldSQL": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from templates where templates.template_type_code = \"CV\"",
    "goldSQL": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from templates where templates.template_type_code = \"CV\"",
    "goldSQL": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.version_number, templates.template_type_code from templates where templates.version_number > 5",
    "goldSQL": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.version_number, templates.template_type_code from templates where templates.version_number > 5",
    "goldSQL": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code, count ( * ) from templates group by templates.template_type_code",
    "goldSQL": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), ref_template_types.template_type_code from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code group by ref_template_types.template_type_code",
    "goldSQL": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select templates.template_type_code from templates group by templates.template_type_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code from templates group by templates.template_type_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code from templates group by templates.template_type_code having count ( * ) < 3",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code from templates group by templates.template_type_code having count ( * ) < 3",
    "goldSQL": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select min ( templates.version_number ), templates.template_type_code from templates order by templates.version_number asc limit 1",
    "goldSQL": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select templates.version_number, templates.template_type_code from templates order by templates.version_number asc limit 1",
    "goldSQL": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code from templates join documents on templates.template_id = documents.template_id where documents.document_name = \"Data base\"",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code from templates join documents on templates.template_id = documents.template_id where documents.document_name = \"Data base\"",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = \"BK\"",
    "goldSQL": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = \"BK\"",
    "goldSQL": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code, count ( * ) from documents join templates on documents.template_id = templates.template_id group by templates.template_type_code",
    "goldSQL": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), templates.template_type_code from templates group by templates.template_type_code",
    "goldSQL": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select templates.template_type_code from templates group by templates.template_type_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code from templates group by templates.template_type_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_type_code from templates except select ref_template_types.template_type_code from ref_template_types",
    "goldSQL": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select templates.template_type_code from templates except select ref_template_types.template_type_code from ref_template_types",
    "goldSQL": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select ref_template_types.template_type_code, ref_template_types.template_type_description from ref_template_types",
    "goldSQL": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select ref_template_types.template_type_code, ref_template_types.template_type_description from ref_template_types",
    "goldSQL": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select ref_template_types.template_type_description from ref_template_types where ref_template_types.template_type_code = \"AD\"",
    "goldSQL": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select ref_template_types.template_type_description from ref_template_types where ref_template_types.template_type_code = \"AD\"",
    "goldSQL": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select ref_template_types.template_type_code from ref_template_types where ref_template_types.template_type_description = \"Book\"",
    "goldSQL": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select ref_template_types.template_type_code from ref_template_types where ref_template_types.template_type_description = \"Book\"",
    "goldSQL": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct ref_template_types.template_type_description from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code",
    "goldSQL": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct templates.template_details from templates join documents on templates.template_id = documents.template_id",
    "goldSQL": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select ref_template_types.template_id from ref_template_types where ref_template_types.template_type_description = \"Presentation\"",
    "goldSQL": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select templates.template_id from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code where ref_template_types.template_type_description = \"Presentation\"",
    "goldSQL": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from paragraphs",
    "goldSQL": "SELECT count(*) FROM Paragraphs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from paragraphs",
    "goldSQL": "SELECT count(*) FROM Paragraphs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = \"Summer Show\"",
    "goldSQL": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = \"Summer Show\"",
    "goldSQL": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select paragraphs.other_details from paragraphs where paragraphs.paragraph_text = \"Korea\"",
    "goldSQL": "select other_details from paragraphs where paragraph_text like 'korea'",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select paragraphs.other_details from paragraphs where paragraphs.paragraph_text = \"Korea\"",
    "goldSQL": "select other_details from paragraphs where paragraph_text like 'korea'",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select paragraphs.paragraph_id, paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = \"Welcome to NY\"",
    "goldSQL": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select paragraphs.paragraph_id, paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = \"Welcome to NY\"",
    "goldSQL": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = \"Customer reviews\"",
    "goldSQL": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = \"Customer reviews\"",
    "goldSQL": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id, count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count ( * ) asc",
    "goldSQL": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select documents.document_id, count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count ( * )",
    "goldSQL": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select documents.document_id, documents.document_name, count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select documents.document_id, documents.document_name, count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select paragraphs.document_id from paragraphs group by paragraphs.document_id having count ( * ) >= 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( * ) >= 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id, documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id, documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select paragraphs.document_id from paragraphs group by paragraphs.document_id order by count ( * ) asc limit 1",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select paragraphs.document_id from paragraphs group by paragraphs.document_id order by count ( * ) asc limit 1",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( * ) between 1 and 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( * ) between 1 and 2",
    "goldSQL": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select paragraphs.document_id from paragraphs where paragraphs.paragraph_text = \"Brazil\" intersect select paragraphs.document_id from paragraphs where paragraphs.paragraph_text = \"Ireland\"",
    "goldSQL": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select paragraphs.document_id from paragraphs where paragraphs.paragraph_text = \"Brazil\" intersect select paragraphs.document_id from paragraphs where paragraphs.paragraph_text = \"Ireland\"",
    "goldSQL": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from teacher",
    "goldSQL": "SELECT count(*) FROM teacher",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from teacher",
    "goldSQL": "SELECT count(*) FROM teacher",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.name from teacher order by teacher.age asc",
    "goldSQL": "SELECT Name FROM teacher ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.name from teacher order by teacher.age asc",
    "goldSQL": "SELECT Name FROM teacher ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.age, teacher.hometown from teacher",
    "goldSQL": "SELECT Age ,  Hometown FROM teacher",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.age, teacher.hometown from teacher",
    "goldSQL": "SELECT Age ,  Hometown FROM teacher",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.name from teacher where teacher.hometown!= \"Little Lever Urban District\"",
    "goldSQL": "select name from teacher where hometown != \"little lever urban district\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name from teacher where teacher.hometown!= \"Little Lever Urban District\"",
    "goldSQL": "select name from teacher where hometown != \"little lever urban district\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name from teacher where teacher.age = 32 or teacher.age = 33",
    "goldSQL": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.name from teacher where teacher.age = 32 or teacher.age = 33",
    "goldSQL": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.hometown from teacher order by teacher.age asc limit 1",
    "goldSQL": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.hometown from teacher order by teacher.age asc limit 1",
    "goldSQL": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.hometown, count ( * ) from teacher group by teacher.hometown",
    "goldSQL": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.hometown, count ( * ) from teacher group by teacher.hometown",
    "goldSQL": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.hometown from teacher group by teacher.hometown order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.hometown from teacher group by teacher.hometown order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.hometown from teacher group by teacher.hometown having count ( * ) >= 2",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.hometown from teacher group by teacher.hometown having count ( * ) >= 2",
    "goldSQL": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.name, course.course from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name, course.course from course join teacher on course.teacher_id = teacher.teacher_id",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name, course.course from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id join course on course_arrange.course_id = course.course_id order by teacher.name asc",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name, course.course from course join teacher on course.teacher_id = teacher.teacher_id order by teacher.name asc",
    "goldSQL": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name from course join course_arrange on course.course_id = course_arrange.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id where course.course = \"Math\"",
    "goldSQL": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name from course join course_arrange on course.course_id = course_arrange.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id where course.course = \"Math\"",
    "goldSQL": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name, count ( * ) from course join teacher on course.teacher_id = teacher.teacher_id group by teacher.name",
    "goldSQL": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name, count ( * ) from course join teacher on course.teacher_id = teacher.teacher_id group by teacher.name",
    "goldSQL": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by course_arrange.teacher_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.teacher_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select teacher.name from teacher where teacher.teacher_id not in ( select course_arrange.teacher_id from course_arrange )",
    "goldSQL": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select teacher.name from teacher where teacher.teacher_id not in ( select course_arrange.teacher_id from course_arrange )",
    "goldSQL": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from visitor where visitor.age < 30",
    "goldSQL": "SELECT count(*) FROM visitor WHERE age  <  30",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select visitor.name from visitor where visitor.level_of_membership > 4 order by visitor.level_of_membership desc",
    "goldSQL": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( visitor.age ) from visitor where visitor.level_of_membership > 4",
    "goldSQL": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select visitor.name, visitor.level_of_membership from visitor where visitor.level_of_membership > 4 order by visitor.age",
    "goldSQL": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select museum.museum_id, museum.name from museum where museum.num_of_staff = ( select max ( museum.num_of_staff ) from museum )",
    "goldSQL": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( museum.num_of_staff ) from museum where museum.open_year < 2009",
    "goldSQL": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select museum.open_year, museum.num_of_staff from museum where museum.name = \"Plaza Museum\"",
    "goldSQL": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select museum.name from museum where museum.num_of_staff > ( select min ( museum.num_of_staff ) from museum where museum.open_year > 2010 )",
    "goldSQL": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select visitor.id, visitor.name, visitor.age from visitor join visit on visitor.id = visit.visitor_id group by visit.visitor_id having count ( * ) > 1",
    "goldSQL": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select visitor.id, visitor.name, visitor.level_of_membership from visit join visitor on visit.visitor_id = visitor.id group by visitor.id order by sum ( visit.total_spent ) desc limit 1",
    "goldSQL": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select museum.id, museum.name from visit join museum on visit.museum_id = museum.museum_id group by visit.museum_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select museum.name from museum where museum.museum_id not in ( select visit.museum_id from visit )",
    "goldSQL": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select visitor.name, visitor.age from visitor join visit on visitor.id = visit.visitor_id group by visit.visitor_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( visit.num_of_ticket ), max ( visit.num_of_ticket ) from visit",
    "goldSQL": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select sum ( visit.num_of_ticket ) from visit join visitor on visit.visitor_id = visitor.id where visitor.level_of_membership = 1",
    "goldSQL": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select visitor.name from visit join visitor on visit.visitor_id = visitor.id join museum on visit.museum_id = museum.museum_id where museum.open_year < 2009 intersect select visitor.name from visit join visitor on visit.visitor_id = visitor.id where museum.open_year > 2011",
    "goldSQL": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from visitor where visitor.visitor_id not in ( select visit.visitor_id from visit where visit.open_year > 2010 )",
    "goldSQL": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from museum where museum.open_year > 2013 or museum.open_year < 2008",
    "goldSQL": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from players",
    "goldSQL": "SELECT count(*) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from players",
    "goldSQL": "SELECT count(*) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from matches",
    "goldSQL": "SELECT count(*) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from matches",
    "goldSQL": "SELECT count(*) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.first_name, players.birth_date from players where players.country_code = \"USA\"",
    "goldSQL": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.first_name, players.birth_date from players where players.country_code = \"USA\"",
    "goldSQL": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( matches.loser_age ), avg ( matches.winner_age ) from matches",
    "goldSQL": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( matches.loser_age ), avg ( matches.winner_age ) from matches",
    "goldSQL": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( rankings.ranking ) from rankings join matches on rankings.player_id = matches.match_num",
    "goldSQL": "SELECT avg(winner_rank) FROM matches",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( rankings.ranking ) from rankings join matches on rankings.player_id = matches.winner_id group by matches.winner_id",
    "goldSQL": "SELECT avg(winner_rank) FROM matches",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select max ( matches.loser_rank ) from matches",
    "goldSQL": "SELECT min(loser_rank) FROM matches",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select matches.loser_rank from matches group by matches.loser_rank order by count ( * ) desc limit 1",
    "goldSQL": "SELECT min(loser_rank) FROM matches",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct players.country_code ) from players",
    "goldSQL": "SELECT count(DISTINCT country_code) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct players.country_code ) from players",
    "goldSQL": "SELECT count(DISTINCT country_code) FROM players",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct matches.loser_name ) from matches",
    "goldSQL": "SELECT count(DISTINCT loser_name) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct matches.loser_name ) from matches",
    "goldSQL": "SELECT count(DISTINCT loser_name) FROM matches",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select matches.tourney_name from matches group by matches.tourney_name having count ( * ) > 10",
    "goldSQL": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tourney_name from tourney join matches on tourney_date.tourney_id = matches.tourney_id group by matches.tourney_id having count ( * ) > 10",
    "goldSQL": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select winner_name from player join winner on player.player_id = winner.player_id where player.year = 2013 intersect select winner_name from player join winner on player.player_id = winner.player_id where players.birth_date = 2016",
    "goldSQL": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.last_name from players join winner on players.player_id = winner.player_id where winner.year = 2013 intersect select players.first_name, players.last_name from players join winner on players.player_id = winner.player_id where winner.year = 2016",
    "goldSQL": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from matches where matches.year = 2013",
    "goldSQL": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from matches where matches.year = 2013",
    "goldSQL": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select players.country_code, players.first_name from players join matches on players.player_id = matches.player_id where matches.tourney_name = \"WTA Championships\" intersect select players.country_code, players.first_name from players join matches on players.player_id = matches.player_id where matches.tourney_name = \"Australian Open\"",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.country_code from players join matches on players.player_id = matches.player_id where matches.tourney_name = \"WTA Championships\" intersect select players.first_name, players.country_code from players join matches on players.player_id = matches.player_id where matches.tourney_name = \"Australian Open\"",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.country_code from players order by players.birth_date desc limit 1",
    "goldSQL": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select players.first_name, players.country_code from players order by players.birth_date desc limit 1",
    "goldSQL": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select players.first_name, players.last_name from players order by players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.first_name, players.last_name from players order by players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.first_name, players.last_name from players join matches on players.player_id = matches.player_id where players.hand = \"L\" order by players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.last_name from players order by players.birth_date",
    "goldSQL": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.country_code from players join rankings on players.player_id = rankings.player_id group by players.player_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.country_code from players join rankings on players.player_id = rankings.player_id group by players.player_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select matches.year from matches group by matches.year order by count ( * ) desc limit 1",
    "goldSQL": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select matches.year from matches group by matches.year order by count ( * ) desc limit 1",
    "goldSQL": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select player.first_name, player.last_name, rankings.ranking_points from player join rankings on player.player_id = rankings.player_id group by player.player_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select matches.winner_name, count ( * ) from matches join rankings on matches.winner_id = rankings.player_id group by matches.winner_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select winner.winner_name from winner join rankings on winner.player_id = rankings.player_id join matches on rankings.match_num = matches.match_num where matches.tourney_name = \"Australian Open\" order by rankings.ranking_points desc limit 1",
    "goldSQL": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select winner.winner_name from winner join rankings on winner.winner_id = rankings.player_id join matches on rankings.match_num = matches.match_num where matches.tourney_name = \"Australian Open\" group by winner.winner_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select loser.loser_name, winner.winner_name from player join matches on player.player_id = matches.player_id order by matches.minutes desc limit 1",
    "goldSQL": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select winner.winner_name, players.first_name, players.last_name from winner join players on winner.player_id = players.player_id join matches on players.player_id = matches.loser_id order by matches.score limit 1",
    "goldSQL": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select player.first_name, avg ( rankings.ranking ) from player join rankings on players.player_id = rankings.player_id group by player.player_id",
    "goldSQL": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, avg ( rankings.ranking ) from players join rankings on players.player_id = rankings.player_id group by players.player_id",
    "goldSQL": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select sum ( rankings.ranking_points ), players.first_name from players join rankings on players.player_id = rankings.player_id group by players.player_id",
    "goldSQL": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, sum ( rankings.ranking_points ) from players join rankings on players.player_id = rankings.player_id group by players.player_id",
    "goldSQL": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), players.country_code from players group by players.country_code",
    "goldSQL": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.country_code, count ( * ) from players group by players.country_code",
    "goldSQL": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.country_code from players group by players.country_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.country_code from players group by players.country_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.country_code from players group by players.country_code having count ( * ) > 50",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.country_code from players group by players.country_code having count ( * ) > 50",
    "goldSQL": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), rankings.ranking_date from rankings group by rankings.ranking_date",
    "goldSQL": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), rankings.ranking_date from rankings group by rankings.ranking_date",
    "goldSQL": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), matches.year from matches group by matches.year",
    "goldSQL": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), matches.year from matches group by matches.year",
    "goldSQL": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select winner_name, rankings.rank from winner_rank join rankings on winner_rank.ranking_date = rankings.ranking_date order by winner_rank.winner_ht limit 3",
    "goldSQL": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select player.first_name, players.last_name, rankings.ranking from player join rankings on player.player_id = rankings.player_id join matches on rankings.match_num = matches.match_num order by matches.score limit 3",
    "goldSQL": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct matches.winner_id ) from matches where matches.tourney_name = \"WTA Championships\" intersect select count ( distinct matches.winner_id ) from matches",
    "goldSQL": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from matches where matches.tourney_name = \"WTA Championships\"",
    "goldSQL": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.country_code, players.birth_date from players join rankings on players.player_id = rankings.player_id order by rankings.ranking_points desc limit 1",
    "goldSQL": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.first_name, players.country_code, players.birth_date from players join rankings on players.player_id = rankings.player_id group by players.player_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select players.hand, count ( * ) from players group by players.hand",
    "goldSQL": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select players.hand, count ( * ) from players group by players.hand",
    "goldSQL": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from ship where ship.disposition_of_ship = \"Captured\"",
    "goldSQL": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select ship.name, ship.tonnage from ship order by ship.tonnage desc",
    "goldSQL": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select battle.name, battle.date, battle.result from battle",
    "goldSQL": "SELECT name ,  date FROM battle",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( death.killed ), min ( death.killed ) from death",
    "goldSQL": "SELECT max(killed) ,  min(killed) FROM death",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( death.injured ), ship.name from death join ship on death.ship_id = ship.id group by ship.name",
    "goldSQL": "SELECT avg(injured) FROM death",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select death.injured, death.note from death join ship on death.ship_id = ship.ship_id where ship.tonnage = \"t\"",
    "goldSQL": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select battle.name, battle.result from battle where battle.bulgarian_commander!= \"Boril\"",
    "goldSQL": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct battle.id, battle.name from ship join battle on ship.lost_in_battle = battle.id where ship.ship_type = \"Brig\"",
    "goldSQL": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select battle.id, battle.name from death join battle on death.battle_id = battle.id group by death.battle having count ( * ) > 10",
    "goldSQL": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select ship.id, ship.name from death join ship on death.ship_id = ship.id group by death.ship_id order by sum ( death.injured ) desc limit 1",
    "goldSQL": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct battle.name from battle where battle.bulgarian_commander = \"Kaloyan\" intersect select distinct battle.name from battle where battle.latin_commander = \"Baldwin I\"",
    "goldSQL": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct battle.result ) from battle",
    "goldSQL": "SELECT count(DISTINCT RESULT) FROM battle",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from battle where battle.id not in ( select ship.id from ship where ship.tonnage = \"225\" )",
    "goldSQL": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select battle.name, battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name = \"Lettice\" and ship.name = \"HMS Atalanta\"",
    "goldSQL": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select battle.name, battle.result, battle.bulgarian_commander from battle except select battle.name, battle.bulgarian_commander from ship join battle on ship.battle_id = battle.id where ship.location = \"English Channel\"",
    "goldSQL": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select death.note from death where death.note like \"%East%\"",
    "goldSQL": "SELECT note FROM death WHERE note LIKE '%East%'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select addresses.address_id from addresses where addresses.line_1 = 1 intersect select addresses.address_id from addresses where addresses.line_2 = 2",
    "goldSQL": "SELECT line_1 ,  line_2 FROM addresses",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select addresses.line_1, addresses.line_2 from addresses",
    "goldSQL": "SELECT line_1 ,  line_2 FROM addresses",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from courses",
    "goldSQL": "SELECT count(*) FROM Courses",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from courses",
    "goldSQL": "SELECT count(*) FROM Courses",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select courses.course_description from courses where courses.course_name = \"math\"",
    "goldSQL": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select courses.course_description from courses where courses.course_name = \"math\"",
    "goldSQL": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select addresses.zip_postcode from addresses where addresses.city = \"Port Chelsea\"",
    "goldSQL": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select addresses.zip_postcode from addresses where addresses.city = \"Port Chelsea\"",
    "goldSQL": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select departments.department_name, departments.department_id from departments join degree_programs on departments.department_id = degree_programs.department_id group by departments.department_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select departments.department_name, departments.department_id from departments join degree_programs on departments.department_id = degree_programs.department_id group by departments.department_id order by count ( * ) desc limit 1",
    "goldSQL": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from departments where departments.department_id not in ( select student_enrolment.department_id from student_enrolment )",
    "goldSQL": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct departments.department_name ) from departments",
    "goldSQL": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct degree_programs.degree_summary_name ) from degree_programs",
    "goldSQL": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct degree_programs.degree_summary_name ) from degree_programs",
    "goldSQL": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select departments.department_id, sum ( departments.degree_summary_description ) from departments where departments.department_name = \"Engineering\"",
    "goldSQL": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from departments where departments.department_name = \"Engineering\"",
    "goldSQL": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select sections.section_name, sections.section_description from sections",
    "goldSQL": "SELECT section_name ,  section_description FROM Sections",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select sections.section_name, sections.section_description from sections",
    "goldSQL": "SELECT section_name ,  section_description FROM Sections",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select courses.course_name, courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) <= 2",
    "goldSQL": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select courses.course_name, courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) < 2",
    "goldSQL": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select sections.section_name from sections order by sections.section_name desc",
    "goldSQL": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select sections.section_name from sections order by sections.section_name desc",
    "goldSQL": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select semesters.semester_name, students.semester_id from semesters join students on semesters.semester_id = students.semester_id group by students.semester_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select semesters.semester_name, students.semester_id from semesters join students on semesters.semester_id = students.semester_id group by students.semester_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select departments.department_description from departments where departments.department_name like \"%computer%\"",
    "goldSQL": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select departments.department_description from departments where departments.department_name like \"%computer%\"",
    "goldSQL": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select student_enrolment.first_name, student_enrolment.middle_name, student_enrolment.student_id from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id group by student_enrolment.semester_id having count ( * ) = 2",
    "goldSQL": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select students.first_name, students.middle_name, students.last_name, student_enrolment.student_id from students join student_enrolment on students.student_id = student_enrolment.student_id join semesters on student_enrolment.semester_id = semesters.semester_id group by students.student_id having count ( * ) = 2",
    "goldSQL": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student_enrolment.first_name, student_enrolment.middle_name, student_enrolment.last_name from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = \"Bachelor\"",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select student_enrolment.first_name, student_enrolment.middle_name, student_enrolment.last_name from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id join addresses on student_enrolment.address_id = addresses.address_id where degree_programs.degree_program_name = \"Bachelors\"",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student_enrolment.degree_program_id from student_enrolment group by student_enrolment.degree_program_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by student_enrolment.degree_program_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student_enrolment.student_enrolment_id, degree_programs.degree_summary_name from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id group by student_enrolment.degree_program_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select degree_programs.degree_program_id, degree_programs.degree_summary_description from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by student_enrolment.degree_program_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select student_enrolment.student_id, students.first_name, students.middle_name, students.last_name, count ( * ) from student_enrolment join students on student_enrolment.student_id = students.student_id group by students.student_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select students.first_name, students.middle_name, count ( * ), student_enrolment.student_id from students join student_enrolment on students.student_id = student_enrolment.student_id group by student_enrolment.student_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select semesters.semester_name from semesters except select semesters.semester_name from semesters join student_enrolment on semesters.semester_id = student_enrolment.semester_id",
    "goldSQL": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select semesters.semester_name from semesters except select semesters.semester_name from semesters join student_enrolment on semesters.semester_id = student_enrolment.semester_id",
    "goldSQL": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id",
    "goldSQL": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id",
    "goldSQL": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id group by courses.course_name order by count ( * ) desc limit 1",
    "goldSQL": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id group by courses.course_name order by count ( * ) desc limit 1",
    "goldSQL": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.last_name from addresses join student_enrolment on addresses.address_id = student_enrolment.current_address_id where addresses.state_province_county = \"North Carolina\" except select students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id join addresses on student_enrolment.degree_program_id = degree_programs.degree_program_id where addresses.state_province_county = \"North Carolina\"",
    "goldSQL": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join addresses on student_enrolment.origin_address_id = addresses.address_id where addresses.city = \"North Carolina\" except select students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where student_enrolment.degree_program_id = \"null\"",
    "goldSQL": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select transcripts.transcript_date, transcripts.transcript_id from transcripts join transcript_contents on transcripts.transcript_id = transcript_contents.transcript_id group by transcripts.transcript_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select transcripts.transcript_date, transcripts.transcript_id from transcripts join student_enrolment_courses on transcripts.transcript_id = student_enrolment_courses.transcript_id group by transcripts.transcript_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select students.cell_mobile_number from students where students.first_name = \"Timmothy\" and students.last_name = \"Ward\"",
    "goldSQL": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.cell_mobile_number from students where students.first_name = \"Timmothy\" and students.last_name = \"Ward\"",
    "goldSQL": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.first_name, students.middle_name, students.last_name from students order by students.date_first_registered asc limit 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.first_name, students.middle_name, students.last_name from students order by students.date_first_registered asc limit 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.first_name, students.middle_name, students.last_name from students order by students.date_left asc limit 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.first_name, students.middle_name, students.last_name from students order by students.date_left asc limit 1",
    "goldSQL": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select students.first_name from students where students.permanent_address_id!= addresses.address_id",
    "goldSQL": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select students.first_name from students where students.permanent_address_id!= ( select students.permanent_address_id from students )",
    "goldSQL": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select addresses.address_id, addresses.line_1 from addresses join students on addresses.address_id = students.current_address_id group by addresses.address_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select addresses.address_id, addresses.line_1, addresses.line_2 from addresses join students on addresses.address_id = students.current_address_id group by addresses.address_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( transcripts.transcript_date ) from transcripts",
    "goldSQL": "SELECT avg(transcript_date) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( transcripts.transcript_date ) from transcripts",
    "goldSQL": "SELECT avg(transcript_date) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select transcripts.transcript_date, transcripts.other_details from transcripts order by transcripts.transcript_date asc limit 1",
    "goldSQL": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select transcripts.other_details, transcripts.transcript_date from transcripts order by transcripts.transcript_date asc limit 1",
    "goldSQL": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from transcripts",
    "goldSQL": "SELECT count(*) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from transcripts",
    "goldSQL": "SELECT count(*) FROM Transcripts",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select transcripts.transcript_date from transcripts order by transcripts.transcript_date desc limit 1",
    "goldSQL": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select transcripts.transcript_date from transcripts order by transcripts.transcript_date desc limit 1",
    "goldSQL": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), student_enrolment.student_enrolment_id from student_enrolment join transcripts on student_enrolment.student_enrolment_id = transcripts.student_course_id group by student_enrolment.student_enrolment_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select max ( student_enrolment_courses.student_enrolment_id ), student_enrolment.student_enrolment_id from student_enrolment join transcripts on student_enrolment.transcript_id = transcripts.transcript_id group by student_enrolment.student_enrolment_id",
    "goldSQL": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select transcripts.transcript_date, transcripts.transcript_id from transcripts order by transcripts.transcript_date asc limit 1",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select transcripts.transcript_date, transcripts.transcript_id from transcripts group by transcripts.transcript_id order by count ( * ) asc limit 1",
    "goldSQL": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select semesters.semester_name from semesters join student_enrolment on semesters.semester_id = student_enrolment.semester_id join departments on student_enrolment.department_id = departments.department_id where degree_programs.degree_summary_name = \"Master\" intersect select semesters.semester_name from semesters join students on semesters.semester_id = students.semester_id join departments on semesters.semester_id = student_enrolment.semester_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = \"Bachelor\"",
    "goldSQL": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select student_enrolment.semester_id from student_enrolment where student_enrolment.student_id = \"Masters\" intersect select student_enrolment.semester_id from student_enrolment where student_enrolment.student_id = \"Bachelors\"",
    "goldSQL": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct addresses.address_id ) from addresses join students on addresses.address_id = students.current_address_id",
    "goldSQL": "SELECT count(DISTINCT current_address_id) FROM Students",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct addresses.address_id from addresses join students on addresses.address_id = students.current_address_id",
    "goldSQL": "SELECT count(DISTINCT current_address_id) FROM Students",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select students.other_student_details from students order by students.other_student_details desc",
    "goldSQL": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select students.other_student_details from students order by students.other_student_details desc",
    "goldSQL": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select sections.section_description from sections where sections.section_id = \"h\"",
    "goldSQL": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select sections.section_description from sections where sections.section_name = \"h\"",
    "goldSQL": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.first_name from addresses join students on addresses.address_id = students.permanent_address_id where addresses.country = \"Haiti\" or students.cell_mobile_number = \"9700166582\"",
    "goldSQL": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select students.first_name from addresses join students on addresses.address_id = students.current_address_id where addresses.country = \"Haiti\" union select students.first_name from students where students.cell_mobile_number = \"9700166582\"",
    "goldSQL": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select cartoon.title from cartoon order by cartoon.title asc",
    "goldSQL": "SELECT Title FROM Cartoon ORDER BY title",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.title from cartoon order by cartoon.title asc",
    "goldSQL": "SELECT Title FROM Cartoon ORDER BY title",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.title from cartoon where cartoon.directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select cartoon.title from cartoon where cartoon.directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cartoon where cartoon.written_by = \"Joseph Kuhr\"",
    "goldSQL": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from cartoon where cartoon.written_by = \"Joseph Kuhr\"",
    "goldSQL": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.title, cartoon.directed_by from cartoon order by cartoon.original_air_date",
    "goldSQL": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.title, cartoon.directed_by from cartoon order by cartoon.original_air_date",
    "goldSQL": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.title from cartoon where cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.title from cartoon where cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"",
    "goldSQL": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.country, count ( * ) from tv_channel group by tv_channel.country order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.country, count ( * ) from tv_channel group by tv_channel.country order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct tv_channel.series_name ), tv_channel.content from tv_channel",
    "goldSQL": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct tv_channel.series_name ) from tv_channel",
    "goldSQL": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.content from tv_channel where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.content from tv_channel where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.package_option from tv_channel where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.package_option from tv_channel where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from tv_channel where tv_channel.language = \"English\"",
    "goldSQL": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from tv_channel where tv_channel.language = \"English\"",
    "goldSQL": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.language, count ( * ) from tv_channel group by tv_channel.language order by count ( * ) asc limit 1",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.language, count ( * ) from tv_channel group by tv_channel.language order by count ( * ) asc limit 1",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.language, count ( * ) from tv_channel group by tv_channel.language",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.language, count ( * ) from tv_channel group by tv_channel.language",
    "goldSQL": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct tv_channel.series_name from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.title = \"The Rise of the Blue Beetle!\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.series_name from cartoon join tv_channel on cartoon.id = tv_channel.id join tv_series on cartoon.id = tv_channel.id where cartoon.title = \"The Rise of the Blue Beetle!\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.channel where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.channel where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.episode from tv_series order by tv_series.rating asc",
    "goldSQL": "SELECT Episode FROM TV_series ORDER BY rating",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.episode from tv_series order by tv_series.rating asc",
    "goldSQL": "SELECT Episode FROM TV_series ORDER BY rating",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.episode, tv_series.rating from tv_series order by tv_series.rating desc limit 3",
    "goldSQL": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_series.episode, tv_series.rating from tv_series order by tv_series.rating desc limit 3",
    "goldSQL": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select min ( tv_series.share ), max ( tv_series.share ) from tv_series",
    "goldSQL": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( tv_series.share ), min ( tv_series.share ) from tv_series",
    "goldSQL": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.air_date from tv_series where tv_series.episode = \"A Love of a Lifetime\"",
    "goldSQL": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.air_date from tv_series where tv_series.episode = \"A Love of a Lifetime\"",
    "goldSQL": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.weekly_rank from tv_series where tv_series.episode = \"A Love of a Lifetime\"",
    "goldSQL": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.weekly_rank from tv_series where tv_series.episode = \"A Love of a Lifetime\"",
    "goldSQL": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_series.episode = \"A Love of a Lifetime\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.series_name from tv_series join tv_channel on tv_series.channel = tv_channel.id where tv_series.episode = \"A Love of a Lifetime\"",
    "goldSQL": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_series.episode from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_series.episode from tv_series join tv_channel on tv_series.channel = tv_channel.id where tv_channel.series_name = \"Sky Radio\"",
    "goldSQL": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.directed_by, count ( * ) from cartoon group by cartoon.directed_by",
    "goldSQL": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.directed_by, count ( * ) from cartoon group by cartoon.directed_by",
    "goldSQL": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select cartoon.production_code, cartoon.channel from cartoon order by cartoon.original_air_date desc limit 1",
    "goldSQL": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select cartoon.production_code, cartoon.channel from cartoon order by cartoon.created_by desc limit 1",
    "goldSQL": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.package_option, tv_channel.series_name from tv_channel where tv_channel.hight_definition_tv = \"Y\"",
    "goldSQL": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.package_option, tv_channel.series_name from tv_channel where tv_channel.hight_definition_tv = \"High Definition TV\"",
    "goldSQL": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct tv_channel.country from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.written_by = \"Todd Casey\"",
    "goldSQL": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct tv_channel.country from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.written_by = \"Todd Casey\"",
    "goldSQL": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct tv_channel.country from tv_channel except select distinct tv_channel.country from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.written_by = \"Todd Casey\"",
    "goldSQL": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.country from tv_channel except select tv_channel.country from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.written_by = \"Todd Casey\"",
    "goldSQL": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.series_name, tv_channel.country from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.directed_by = \"Ben Jones\" intersect select tv_channel.series_name, tv_channel.country from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.directed_by = \"Michael Chang\"",
    "goldSQL": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.series_name, tv_channel.country from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.directed_by = \"Ben Jones\" intersect select tv_channel.series_name, tv_channel.country from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.directed_by = \"Michael Chang\"",
    "goldSQL": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.pixel_aspect_ratio_par, tv_channel.nation from tv_channel where tv_channel.language!= \"English\"",
    "goldSQL": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.pixel_aspect_ratio_par, tv_channel.country from tv_channel where tv_channel.language!= \"English\"",
    "goldSQL": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.id from tv_channel group by tv_channel.country having count ( * ) > 2",
    "goldSQL": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.id from tv_channel group by tv_channel.id having count ( * ) > 2",
    "goldSQL": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.id from tv_channel except select cartoon.channel from cartoon where cartoon.directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.id from tv_channel except select cartoon.channel from cartoon where cartoon.directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select tv_channel.package_option from tv_channel except select tv_channel.package_option from cartoon join tv_channel on cartoon.id = tv_channel.id where cartoon.directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select tv_channel.package_option from tv_channel except select tv_channel.package_option from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.directed_by = \"Ben Jones\"",
    "goldSQL": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from poker_player",
    "goldSQL": "SELECT count(*) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from poker_player",
    "goldSQL": "SELECT count(*) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select poker_player.earnings from poker_player order by poker_player.earnings desc",
    "goldSQL": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select poker_player.earnings from poker_player order by poker_player.earnings desc",
    "goldSQL": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select poker_player.final_table_made, poker_player.best_finish from poker_player",
    "goldSQL": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select poker_player.final_table_made, poker_player.best_finish from poker_player",
    "goldSQL": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( poker_player.earnings ) from poker_player",
    "goldSQL": "SELECT avg(Earnings) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( poker_player.earnings ) from poker_player",
    "goldSQL": "SELECT avg(Earnings) FROM poker_player",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select poker_player.money_rank from poker_player order by poker_player.earnings desc limit 1",
    "goldSQL": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select poker_player.money_rank from poker_player order by poker_player.earnings desc limit 1",
    "goldSQL": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( poker_player.final_table_made ) from poker_player where poker_player.earnings < 200000",
    "goldSQL": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( poker_player.final_table_made ) from poker_player where poker_player.earnings < 200000",
    "goldSQL": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id where poker_player.earnings > 300000",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id where poker_player.earnings > 300000",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id order by poker_player.final_table_made asc",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id order by poker_player.final_table_made asc",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.birth_date from poker_player join people on poker_player.people_id = people.people_id order by poker_player.earnings limit 1",
    "goldSQL": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.birth_date from poker_player join people on poker_player.people_id = people.people_id order by poker_player.earnings limit 1",
    "goldSQL": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select poker_player.money_rank from poker_player order by poker_player.money_rank asc limit 1",
    "goldSQL": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select poker_player.money_rank from poker_player join people on poker_player.people_id = people.people_id order by people.height desc limit 1",
    "goldSQL": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( poker_player.earnings ) from poker_player join people on poker_player.people_id = people.people_id where people.height > 200",
    "goldSQL": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( poker_player.earnings ) from poker_player join people on poker_player.people_id = people.people_id where people.height > 200",
    "goldSQL": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id order by poker_player.earnings desc",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from poker_player join people on poker_player.people_id = people.people_id order by poker_player.earnings desc",
    "goldSQL": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.nationality, count ( * ) from people group by people.nationality",
    "goldSQL": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.nationality, count ( * ) from people group by people.nationality",
    "goldSQL": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.nationality from people group by people.nationality order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.nationality from people group by people.nationality order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.nationality from people group by people.nationality having count ( * ) >= 2",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.nationality from people group by people.nationality having count ( * ) >= 2",
    "goldSQL": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name, people.birth_date from people order by people.name asc",
    "goldSQL": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name, people.birth_date from people order by people.name asc",
    "goldSQL": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from people where people.nationality!= \"Russia\"",
    "goldSQL": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select people.name from people where people.nationality!= \"Russia\"",
    "goldSQL": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select people.name from people where people.people_id not in ( select poker_player.people_id from poker_player )",
    "goldSQL": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select people.name from people where people.people_id not in ( select poker_player.people_id from poker_player )",
    "goldSQL": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct people.nationality ) from people",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM people",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct people.nationality ) from people",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM people",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct area_code_state.state ) from area_code_state",
    "goldSQL": "SELECT count(*) FROM area_code_state",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select contestants.contestant_number, contestants.contestant_name from contestants order by contestants.contestant_name desc",
    "goldSQL": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select votes.vote_id, votes.phone_number, votes.state from votes",
    "goldSQL": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( area_code_state.area_code ), min ( area_code_state.area_code ) from area_code_state",
    "goldSQL": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select votes.created from votes where votes.state = \"CA\"",
    "goldSQL": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select contestants.contestant_name from contestants except select contestants.contestant_name from contestants where contestants.contestant_name = \"Jessie Alloway\"",
    "goldSQL": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct area_code_state.state, votes.created from area_code_state join votes on area_code_state.area_code = votes.area_code",
    "goldSQL": "SELECT DISTINCT state ,  created FROM votes",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select contestants.contestant_number, contestants.contestant_name from votes join contestants on votes.contestant_number = contestants.contestant_number group by contestants.contestant_number having count ( * ) >= 2",
    "goldSQL": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select contestants.contestant_number, contestants.contestant_name from contestants join votes on contestants.contestant_number = votes.contestant_number group by contestants.contestant_number order by count ( * ) asc limit 1",
    "goldSQL": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from votes where votes.state = \"NY\" or votes.state = \"CA\"",
    "goldSQL": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from contestants where contestants.contestant_number not in ( select votes.contestant_number from votes )",
    "goldSQL": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select area_code_state.area_code from area_code_state join votes on area_code_state.area_code = votes.area_code group by votes.area_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select votes.created, votes.state, votes.phone_number from votes join contestants on votes.contestant_number = contestants.contestant_number where contestants.contestant_name = \"Tabatha Gehling\"",
    "goldSQL": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select area_code_state.area_code from area_code_state join votes on area_code_state.area_code = votes.area_code where votes.contestant_name = \"Tabatha Gehling\" intersect select area_code_state.area_code from area_code_state join votes on area_code_state.area_code = votes.area_code where contestants.contestant_name = \"Kelly Clauss\"",
    "goldSQL": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select contestants.contestant_name from contestants where contestants.contestant_name like \"%Al%\"",
    "goldSQL": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country where country.indepyear > 1950",
    "goldSQL": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country where country.population > 1950",
    "goldSQL": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from country where country.governmentform = \"Republic\"",
    "goldSQL": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from country where country.governmentform = \"Republic\"",
    "goldSQL": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select sum ( country.surfacearea ) from country where country.region = \"Caribbean\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.surfacearea from city join country on city.countrycode = country.countrycode where city.district = \"Carribean\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.continent from country where country.name = \"Anguilla\"",
    "goldSQL": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.continent from country where country.name = \"Anguilla\"",
    "goldSQL": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.region from city join country on city.countrycode = country.code where city.name = \"Kabul\"",
    "goldSQL": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.region from city join country on city.countrycode = country.countrycode where city.name = \"Kabul\"",
    "goldSQL": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = \"Aruba\" group by countrylanguage.language order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = \"Aruba\"",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.population, country.lifeexpectancy from country where country.name = \"Brazil\"",
    "goldSQL": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.population, country.lifeexpectancy from country where country.code = \"Brazil\"",
    "goldSQL": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.region, country.population from country where country.name = \"Angola\"",
    "goldSQL": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.region, city.population from country where country.name = \"Angola\"",
    "goldSQL": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( country.lifeexpectancy ) from country where country.region = \"Central Africa\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( country.lifeexpectancy ) from country where country.region = \"Central Africa\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country where country.continent = \"Asia\" order by country.lifeexpectancy limit 1",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from country where country.continent = \"Asia\" order by country.lifeexpectancy limit 1",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select sum ( country.population ), max ( country.gnp ) from country where country.continent = \"Asia\"",
    "goldSQL": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.gnp, max ( country.gnp ) from country where country.continent = \"Asia\"",
    "goldSQL": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( country.lifeexpectancy ) from country where country.continent = \"Africa\" and country.governmentform = \"Republic\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( country.lifeexpectancy ) from country where country.continent = \"Africa\" and country.governmentform = \"Republic\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select sum ( country.surfacearea ) from country where country.continent = \"Asia\" intersect select sum ( country.surfacearea ) from country where country.continent = \"Europe\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select sum ( country.surfacearea ) from country where country.continent = \"Asia\" or country.continent = \"Europe\"",
    "goldSQL": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from city where city.district = \"Gelderland\"",
    "goldSQL": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select sum ( city.population ) from city where city.district = \"Gelderland\"",
    "goldSQL": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( country.gnp ), sum ( country.population ) from country where country.governmentform = \"US\"",
    "goldSQL": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( country.gnp ), sum ( country.population ) from country where country.governmentform = \"US\"",
    "goldSQL": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct countrylanguage.language ) from countrylanguage",
    "goldSQL": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct countrylanguage.language ) from countrylanguage",
    "goldSQL": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct country.governmentform ) from country where country.continent = \"Africa\"",
    "goldSQL": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct country.governmentform ) from country where country.continent = \"Africa\"",
    "goldSQL": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = \"Aruba\"",
    "goldSQL": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = \"Aruba\"",
    "goldSQL": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = \"Afghanistan\"",
    "goldSQL": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = \"Afghanistan\"",
    "goldSQL": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.countrycode order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.language order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.continent from countrylanguage join country on countrylanguage.countrycode = country.code group by country.continent order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select country.continent from country group by country.continent order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"English\" intersect select count ( * ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"Dutch\"",
    "goldSQL": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countrylanguage where countrylanguage.language = \"English\" intersect select count ( * ) from countrylanguage where countrylanguage.language = \"Dutch\"",
    "goldSQL": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"English\" intersect select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"English\" intersect select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"English\" intersect select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"English\" intersect select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"French\"",
    "goldSQL": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct country.continent ) from country where countrylanguage.language = \"Chinese\"",
    "goldSQL": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from country join countrylanguage on country.countrycode = countrylanguage.countrycode where countrylanguage.language = \"Chinese\"",
    "goldSQL": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.region from countrylanguage where countrylanguage.language = \"English\" or countrylanguage.language = \"Dutch\"",
    "goldSQL": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.region from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"Dutch\" or countrylanguage.language = \"English\"",
    "goldSQL": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"English\" or countrylanguage.language = \"Dutch\"",
    "goldSQL": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = \"English\" or countrylanguage.language = \"Dutch\"",
    "goldSQL": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.language from country join countrylanguage on country.countrycode = countrylanguage.countrycode where country.continent = \"Asia\" group by countrylanguage.language order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.continent = \"Asia\" group by countrylanguage.language order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.language from countrylanguage join country on countrylanguage.countrycode = country.code where country.governmentform = \"Republic\" group by countrylanguage.language having count ( * ) = 1",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.language from countrylanguage join country on countrylanguage.countrycode = country.code where country.governmentform = \"Republic\"",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = \"English\" order by countrylanguage.population desc limit 1",
    "goldSQL": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = \"English\" group by countrylanguage.population order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name, country.population, country.lifeexpectancy from country where country.continent = \"Asia\" order by country.surfacearea desc limit 1",
    "goldSQL": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name, country.population, country.lifeexpectancy from country where country.continent = \"Asia\" order by country.population desc limit 1",
    "goldSQL": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( country.lifeexpectancy ) from country where country.language!= \"English\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( country.lifeexpectancy ) from country where country.language!= \"English\"",
    "goldSQL": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from country where country.countrycode not in ( select countrylanguage.countrycode from countrylanguage where countrylanguage.language = \"English\" )",
    "goldSQL": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from country where country.countrycode not in ( select countrylanguage.countrycode from countrylanguage where countrylanguage.language = \"English\" )",
    "goldSQL": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.language from countrylanguage join country on countrylanguage.countrycode = country.code where country.headofstate = \"Beatrix\"",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.language from countrylanguage join country on countrylanguage.countrycode = country.code where country.headofstate = \"Beatrix\"",
    "goldSQL": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct countrylanguage.language ) from countrylanguage join country on countrylanguage.countrycode = country.code where country.population < 1930",
    "goldSQL": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct countrylanguage.language ) from countrylanguage where countrylanguage.countrycode < 1930",
    "goldSQL": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from country where country.surfacearea > ( select max ( country.surfacearea ) from country where country.continent = \"Europe\" )",
    "goldSQL": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from country where country.surfacearea > ( select max ( country.surfacearea ) from country where country.continent = \"Europe\" )",
    "goldSQL": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from country where country.population < ( select min ( country.population ) from country where country.continent = \"Asia\" )",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from country where country.population < ( select min ( country.population ) from country where country.continent = \"Asia\" )",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from country where country.population > ( select max ( country.population ) from country where country.continent = \"Asia\" )",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name from country where country.population > ( select max ( country.population ) from country where country.continent = \"Asia\" )",
    "goldSQL": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.code from country except select countrylanguage.countrycode from countrylanguage where countrylanguage.language = \"English\"",
    "goldSQL": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.code from country except select countrylanguage.countrycode from countrylanguage where countrylanguage.language = \"English\"",
    "goldSQL": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.countrycode from countrylanguage where countrylanguage.language!= \"English\"",
    "goldSQL": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.countrycode from countrylanguage where countrylanguage.language!= \"English\"",
    "goldSQL": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select country.code from country except select countrylanguage.countrycode from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"English\" and country.governmentform = \"Republic\"",
    "goldSQL": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.code from country except select countrylanguage.countrycode from countrylanguage where countrylanguage.language = \"English\" and countrylanguage.governmentform = \"Republic\"",
    "goldSQL": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select city.name from country join countrylanguage on country.code = countrylanguage.countrycode join city on countrylanguage.city = city.id where country.continent = \"European\" and countrylanguage.language!= \"English\"",
    "goldSQL": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select city.name from country join countrylanguage on country.code = countrylanguage.countrycode join city on countrylanguage.language = city.countrycode where country.continent!= \"Europe\" and countrylanguage.language!= \"English\"",
    "goldSQL": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct city.name from country join countrylanguage on country.code = countrylanguage.countrycode join city on countrylanguage.countrycode = city.countrycode where country.continent = \"Asian\" and countrylanguage.language = \"Chinese\"",
    "goldSQL": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct city.name from city join country on city.countrycode = country.code where country.continent = \"Asia\" intersect select distinct city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = \"Chinese\"",
    "goldSQL": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name, country.indepyear, country.surfacearea from country order by country.population asc limit 1",
    "goldSQL": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name, country.indepyear, country.surfacearea from country order by country.population limit 1",
    "goldSQL": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.population, country.name, country.leader from country order by country.surfacearea desc limit 1",
    "goldSQL": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name, country.population, country.headofstate from country order by country.surfacearea desc limit 1",
    "goldSQL": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name, count ( * ) from country join countrylanguage on country.code = countrylanguage.countrycode group by countrylanguage.countrycode having count ( * ) >= 3",
    "goldSQL": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name, count ( * ) from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.countrycode having count ( * ) > 2",
    "goldSQL": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), city.district from city where city.population > ( select avg ( city.population ) from city ) group by city.district",
    "goldSQL": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), city.district from city where city.population > ( select avg ( city.population ) from city ) group by city.district",
    "goldSQL": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.governmentform, sum ( country.population ) from country where country.lifeexpectancy > 72 group by country.governmentform",
    "goldSQL": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.governmentform, sum ( country.population ) from country where country.lifeexpectancy > 72 group by country.governmentform",
    "goldSQL": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.continent, avg ( country.lifeexpectancy ), sum ( country.population ) from country where country.lifeexpectancy < 72 group by country.continent",
    "goldSQL": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.continent, sum ( country.population ), avg ( country.lifeexpectancy ) from country where country.lifeexpectancy < 72 group by country.continent",
    "goldSQL": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name, country.surfacearea from country order by country.surfacearea desc limit 5",
    "goldSQL": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select country.name, country.surfacearea from country order by country.population desc limit 5",
    "goldSQL": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country order by country.population desc limit 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country order by country.population desc limit 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country order by country.population asc limit 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country order by country.population asc limit 3",
    "goldSQL": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from country where country.continent = \"Asia\"",
    "goldSQL": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from country where country.continent = \"Asia\"",
    "goldSQL": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country where country.continent = \"Europe\" and country.population = 80000",
    "goldSQL": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select country.name from country where country.continent = \"Europe\" and country.population = 80000",
    "goldSQL": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select sum ( country.population ), avg ( country.surfacearea ) from country where country.continent = \"North America\" and country.surfacearea > 3000",
    "goldSQL": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select sum ( country.population ), avg ( country.surfacearea ) from country where country.continent = \"North America\" and country.surfacearea > 3000",
    "goldSQL": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select city.name from city where city.population between 160000 and 900000",
    "goldSQL": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select city.name from city where city.population between 160000 and 900000",
    "goldSQL": "select name from city where population between 160000 and 900000",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select countrylanguage.language from countrylanguage group by countrylanguage.language order by count ( * ) desc limit 1",
    "goldSQL": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select countrylanguage.language from countrylanguage group by countrylanguage.language order by count ( * ) desc limit 1",
    "goldSQL": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select countrylanguage.language, countrylanguage.percentage from countrylanguage group by countrylanguage.language order by sum ( countrylanguage.percentage ) desc limit 1",
    "goldSQL": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.countrycode, countrylanguage.language from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.countrycode order by avg ( countrylanguage.percentage ) desc limit 1",
    "goldSQL": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = \"Spanish\" group by countrylanguage.countrycode order by sum ( countrylanguage.percentage ) desc limit 1",
    "goldSQL": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from countrylanguage where countrylanguage.language = \"Spanish\"",
    "goldSQL": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select countrylanguage.countrycode from countrylanguage where countrylanguage.language = \"Spanish\" order by countrylanguage.percentage desc limit 1",
    "goldSQL": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select countrylanguage.countrycode from countrylanguage where countrylanguage.language = \"Spanish\"",
    "goldSQL": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from conductor",
    "goldSQL": "SELECT count(*) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from conductor",
    "goldSQL": "SELECT count(*) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor order by conductor.age asc",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor order by conductor.age",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Age ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor where conductor.nationality!= \"USA\"",
    "goldSQL": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select conductor.name from conductor where conductor.nationality!= \"USA\"",
    "goldSQL": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select orchestra.record_company from orchestra order by orchestra.year_of_founded desc",
    "goldSQL": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.record_company from orchestra order by orchestra.year_of_founded desc",
    "goldSQL": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( show.attendance ) from show",
    "goldSQL": "SELECT avg(Attendance) FROM SHOW",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( show.attendance ) from show",
    "goldSQL": "SELECT avg(Attendance) FROM SHOW",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select max ( performance.share ), min ( performance.share ) from performance where performance.type!= \"Live final\"",
    "goldSQL": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select max ( performance.share ), min ( performance.share ) from performance where performance.type!= \"Live final\"",
    "goldSQL": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct conductor.nationality ) from conductor",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( distinct conductor.nationality ) from conductor",
    "goldSQL": "SELECT count(DISTINCT Nationality) FROM conductor",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor order by conductor.year_of_work desc",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor order by conductor.year_of_work desc",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor order by conductor.year_of_work desc limit 1",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor order by conductor.year_of_work desc limit 1",
    "goldSQL": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name, orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id",
    "goldSQL": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name, orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id",
    "goldSQL": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id having count ( * ) > 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id having count ( * ) > 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008",
    "goldSQL": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.record_company, count ( * ) from orchestra group by orchestra.record_company",
    "goldSQL": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.record_company, count ( * ) from orchestra group by orchestra.record_company",
    "goldSQL": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.major_record_format from orchestra order by count ( * ) asc",
    "goldSQL": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.major_record_format from orchestra order by orchestra.major_record_format",
    "goldSQL": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.record_company from orchestra group by orchestra.record_company order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.record_company from orchestra group by orchestra.record_company order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.name from orchestra where orchestra.orchestra_id not in ( select performance.orchestra_id from performance )",
    "goldSQL": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.orchestra from orchestra where orchestra.orchestra_id not in ( select performance.orchestra_id from performance )",
    "goldSQL": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.record_company from orchestra where orchestra.year_of_founded < 2003 intersect select orchestra.record_company from orchestra where orchestra.year_of_founded > 2003",
    "goldSQL": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select orchestra.record_company from orchestra where orchestra.year_of_founded < 2003 intersect select orchestra.record_company from orchestra where orchestra.year_of_founded > 2003",
    "goldSQL": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from orchestra where orchestra.major_record_format = \"CD\" orchestra.major_record_format = \"DVD\"",
    "goldSQL": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from orchestra where orchestra.major_record_format = \"CD\" orchestra.major_record_format = \"DVD\"",
    "goldSQL": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select orchestra.year_of_founded from orchestra join performance on orchestra.orchestra_id = performance.orchestra_id group by orchestra.year_of_founded having count ( * ) > 1",
    "goldSQL": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select orchestra.year_of_founded from orchestra join performance on orchestra.orchestra_id = performance.orchestra_id group by orchestra.orchestra_id having count ( * ) > 1",
    "goldSQL": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from highschooler",
    "goldSQL": "SELECT count(*) FROM Highschooler",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from highschooler",
    "goldSQL": "SELECT count(*) FROM Highschooler",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name, highschooler.grade from highschooler",
    "goldSQL": "SELECT name ,  grade FROM Highschooler",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name, highschooler.grade from highschooler",
    "goldSQL": "SELECT name ,  grade FROM Highschooler",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct highschooler.grade from highschooler",
    "goldSQL": "SELECT grade FROM Highschooler",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler",
    "goldSQL": "SELECT grade FROM Highschooler",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler where highschooler.grade = 10",
    "goldSQL": "SELECT name FROM Highschooler WHERE grade  =  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler where highschooler.grade = 10",
    "goldSQL": "SELECT name FROM Highschooler WHERE grade  =  10",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.id from highschooler where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.id from highschooler where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from highschooler where highschooler.grade = 9 or highschooler.grade = 10",
    "goldSQL": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from highschooler where highschooler.grade = 9 or highschooler.grade = 10",
    "goldSQL": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade, count ( * ) from highschooler group by highschooler.grade",
    "goldSQL": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade, count ( * ) from highschooler group by highschooler.grade",
    "goldSQL": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler group by highschooler.grade order by count ( * ) desc limit 1",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler group by highschooler.grade order by count ( * ) desc limit 1",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler group by highschooler.grade having count ( * ) >= 4",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler group by highschooler.grade having count ( * ) >= 4",
    "goldSQL": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select friend.student_id, count ( * ) from friend group by friend.student_id",
    "goldSQL": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ), friend.student_id from friend group by friend.student_id",
    "goldSQL": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name, count ( * ) from highschooler join friend on highschooler.id = friend.friend_id group by friend.student_id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name, count ( * ) from highschooler join friend on highschooler.id = friend.friend_id group by friend.friend_id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name from highschooler join friend on highschooler.id = friend.friend_id group by friend.friend_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name from highschooler join friend on highschooler.id = friend.student_id group by friend.student_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler join friend on highschooler.id = friend.friend_id group by friend.friend_id having count ( * ) >= 3",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name from highschooler join friend on highschooler.id = friend.friend_id group by friend.friend_id having count ( * ) >= 3",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler join friend on highschooler.id = friend.friend_id where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select friend.friend_name from highschooler join friend on highschooler.id = friend.friend_id where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from highschooler join friend on highschooler.id = friend.friend_id where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from highschooler join friend on highschooler.id = friend.friend_id where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select student.student_id from student except select friend.student_id from friend",
    "goldSQL": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.student_id from highschooler except select friend.student_id from friend",
    "goldSQL": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler where highschooler.id not in ( select friend.student_id from friend )",
    "goldSQL": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler where highschooler.id not in ( select friend.student_id from friend )",
    "goldSQL": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "hardness": "hard",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.id from highschooler join likes on highschooler.id = likes.student_id intersect select highschooler.id from highschooler join friend on highschooler.id = likes.student_id",
    "goldSQL": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select likes.student_id from likes intersect select friend.student_id from friend",
    "goldSQL": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct highschooler.name from highschooler join likes on highschooler.id = likes.student_id join friend on likes.friend_id = friend.friend_id",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler join likes on highschooler.id = likes.highschooler_id intersect select highschooler.name from highschooler join friend on highschooler.id = likes.highschooler_id",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), likes.student_id from likes group by likes.student_id",
    "goldSQL": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ), likes.student_id from likes group by likes.student_id",
    "goldSQL": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name, count ( * ) from highschooler join likes on highschooler.id = likes.highschooler_id group by highschooler.id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name, count ( * ) from highschooler join likes on highschooler.id = likes.highschooler_id group by highschooler.id",
    "goldSQL": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name from highschooler join likes on highschooler.id = likes.highschooler_id group by likes.highschooler_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by likes.student_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by likes.student_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by likes.student_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.name from highschooler join friend on highschooler.id = friend.friend_id where friend.grade > 5 group by friend.student_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select highschooler.name from highschooler where highschooler.grade > 5 intersect select highschooler.name from highschooler join friend on highschooler.id = friend.friend_id group by friend.friend_id having count ( * ) >= 2",
    "goldSQL": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from highschooler join likes on highschooler.id = likes.student_id where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from highschooler join likes on highschooler.id = likes.student_id where highschooler.name = \"Kyle\"",
    "goldSQL": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( highschooler.grade ) from highschooler join friend on highschooler.id = friend.friend_id group by friend.student_id",
    "goldSQL": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( highschooler.grade ) from highschooler join friend on highschooler.id = friend.friend_id group by friend.student_id",
    "goldSQL": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select min ( highschooler.grade ) from highschooler where highschooler.student_id not in ( select friend.student_id from friend )",
    "goldSQL": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select highschooler.grade from highschooler where highschooler.student_id not in ( select friend.student_id from friend )",
    "goldSQL": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.state from owners intersect select professionals.state from professionals",
    "goldSQL": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.state from owners intersect select professionals.state from professionals",
    "goldSQL": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( dogs.age ) from dogs join treatments on dogs.dog_id = treatments.dog_id",
    "goldSQL": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select avg ( dogs.age ) from dogs join treatments on dogs.dog_id = treatments.dog_id group by dogs.dog_id",
    "goldSQL": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.last_name, professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id where professionals.state = \"Indiana\" group by professionals.professional_id having count ( * ) > 2",
    "goldSQL": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.last_name, professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id where professionals.state = \"Indiana\" group by professionals.professional_id having count ( * ) > 2",
    "goldSQL": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.name from dogs except select dogs.name from dogs join treatments on dogs.dog_id = treatments.dog_id where treatments.cost_of_treatment > 1000",
    "goldSQL": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select dogs.name from dogs except select dogs.name from dogs join treatments on dogs.dog_id = treatments.dog_id group by dogs.owner_id having sum ( treatments.cost_of_treatment ) > 1000",
    "goldSQL": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.first_name from professionals union select owners.first_name from owners join dogs on owners.owner_id = dogs.owner_id",
    "goldSQL": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.first_name from professionals union select owners.first_name from owners join dogs on owners.owner_id = dogs.owner_id",
    "goldSQL": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.role_code, professionals.email_address from professionals except select treatments.professional_id, professionals.role_code, professionals.email_address from treatments join dogs on treatments.dog_id = dogs.dog_id",
    "goldSQL": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.role_code, professionals.email_address from professionals except select treatments.professional_id, professionals.role_code, professionals.email_address from treatments join dogs on treatments.dog_id = dogs.dog_id",
    "goldSQL": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.owner_id, owners.first_name, owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.owner_id, owners.first_name, owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.role_code, professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.role_code, professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by dogs.breed_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_code order by count ( * ) desc limit 1",
    "goldSQL": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.owner_id, owners.last_name from owners join treatments on owners.owner_id = treatments.owner_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1",
    "goldSQL": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.owner_id, owners.last_name from owners join treatments on owners.owner_id = treatments.owner_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1",
    "goldSQL": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatments.treatment_type_code order by sum ( treatments.cost_of_treatment ) asc limit 1",
    "goldSQL": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatments.treatment_type_code order by sum ( treatments.cost_of_treatment ) limit 1",
    "goldSQL": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select dogs.owner_id, dogs.zip_code from dogs group by dogs.owner_id order by sum ( charges.charge_amount ) desc limit 1",
    "goldSQL": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.owner_id, dogs.zip_code from dogs group by dogs.owner_id order by sum ( dogs.weight ) desc limit 1",
    "goldSQL": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.professional_id, professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2",
    "goldSQL": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.first_name, professionals.last_name from professionals join treatments on professionals.professional_id = treatments.professional_id where treatments.cost_of_treatment < ( select avg ( treatments.cost_of_treatment ) from treatments )",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct professionals.first_name, professionals.last_name from professionals join treatments on professionals.professional_id = treatments.professional_id where treatments.cost_of_treatment < ( select avg ( treatments.cost_of_treatment ) from treatments )",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select treatments.date_of_treatment, professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id",
    "goldSQL": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select treatments.date_of_treatment, professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id",
    "goldSQL": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select treatments.treatment_type_code, treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code",
    "goldSQL": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select treatments.cost_of_treatment, treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code",
    "goldSQL": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.first_name, owners.last_name, dogs.size_code from owners join dogs on owners.owner_id = dogs.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.first_name, owners.last_name, dogs.size_code from owners join dogs on owners.owner_id = dogs.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.first_name, dogs.name from owners join dogs on owners.owner_id = dogs.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.first_name, dogs.name from owners join dogs on owners.owner_id = dogs.owner_id",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.name, treatments.date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id join breeds on treatments.breed_code = breeds.breed_code",
    "goldSQL": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select dogs.name, treatments.date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id join breeds on treatments.breed_code = breeds.breed_code",
    "goldSQL": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select dogs.first_name, dogs.name from dogs join owners on dogs.owner_id = owners.owner_id where owners.state = \"Virginia\"",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.first_name, dogs.name from owners join dogs on owners.owner_id = dogs.owner_id where owners.state = \"Virginia\"",
    "goldSQL": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.date_arrived, dogs.date_departed from dogs join treatments on dogs.dog_id = treatments.dog_id",
    "goldSQL": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select dogs.date_arrived, dogs.date_departed from dogs join treatments on dogs.dog_id = treatments.dog_id",
    "goldSQL": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id order by dogs.age limit 1",
    "goldSQL": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id order by dogs.age asc limit 1",
    "goldSQL": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "hardness": "extra",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.email_address from professionals where professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"",
    "goldSQL": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.email_address from professionals where professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"",
    "goldSQL": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.date_arrived, dogs.date_departed from dogs",
    "goldSQL": "SELECT date_arrived ,  date_departed FROM Dogs",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.date_arrived, dogs.date_departed from dogs",
    "goldSQL": "SELECT date_arrived ,  date_departed FROM Dogs",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from treatments join dogs on treatments.dog_id = dogs.dog_id",
    "goldSQL": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from dogs join treatments on dogs.dog_id = treatments.dog_id group by dogs.dog_id",
    "goldSQL": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from treatments join dogs on treatments.dog_id = dogs.dog_id",
    "goldSQL": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( distinct treatments.professional_id ) from treatments",
    "goldSQL": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select professionals.role_code, professionals.city, professionals.state from professionals where professionals.city like \"%West%\"",
    "goldSQL": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.role_code, professionals.street, professionals.city, professionals.state from professionals where professionals.city like \"%West%\"",
    "goldSQL": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.first_name, owners.last_name, owners.email_address from owners where owners.state like \"%North%\"",
    "goldSQL": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select owners.first_name, owners.last_name, owners.email_address from owners where owners.state like \"%North%\"",
    "goldSQL": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from dogs where dogs.age < ( select avg ( dogs.age ) from dogs )",
    "goldSQL": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from dogs where dogs.age < ( select avg ( dogs.age ) from dogs )",
    "goldSQL": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select treatments.cost_of_treatment from treatments order by treatments.date_of_treatment desc limit 1",
    "goldSQL": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select treatments.cost_of_treatment from treatments order by treatments.date_of_treatment desc limit 1",
    "goldSQL": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from dogs where dogs.dog_id not in ( select treatments.dog_id from treatments )",
    "goldSQL": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from dogs where dogs.dog_id not in ( select treatments.dog_id from treatments )",
    "goldSQL": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from owners where owners.owner_id not in ( select dogs.owner_id from dogs )",
    "goldSQL": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from owners where owners.owner_id not in ( select dogs.owner_id from dogs )",
    "goldSQL": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from professionals where professionals.professional_id not in ( select treatments.professional_id from treatments )",
    "goldSQL": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from professionals where professionals.professional_id not in ( select treatments.professional_id from treatments )",
    "goldSQL": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "hardness": "extra",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.name, dogs.age, dogs.weight from dogs where dogs.abandoned_yn = 1",
    "goldSQL": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select dogs.name, dogs.age, dogs.weight from dogs where dogs.abandoned_yn = 1",
    "goldSQL": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( dogs.age ) from dogs",
    "goldSQL": "SELECT avg(age) FROM Dogs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select avg ( dogs.age ) from dogs",
    "goldSQL": "SELECT avg(age) FROM Dogs",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select dogs.age from dogs order by dogs.age desc limit 1",
    "goldSQL": "SELECT max(age) FROM Dogs",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select dogs.age from dogs order by dogs.age desc limit 1",
    "goldSQL": "SELECT max(age) FROM Dogs",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select charges.charge_type, charges.charge_amount from charges group by charges.charge_type",
    "goldSQL": "SELECT charge_type ,  charge_amount FROM Charges",
    "hardness": "medium",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select charges.charge_type, charges.charge_amount from charges",
    "goldSQL": "SELECT charge_type ,  charge_amount FROM Charges",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select charges.charge_amount from charges order by charges.charge_amount desc limit 1",
    "goldSQL": "SELECT max(charge_amount) FROM Charges",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select charges.charge_amount from charges order by charges.charge_amount desc limit 1",
    "goldSQL": "SELECT max(charge_amount) FROM Charges",
    "hardness": "easy",
    "label": 0,
    "exec": true,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select professionals.email_address, professionals.cell_number, professionals.home_phone from professionals",
    "goldSQL": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.email_address, professionals.cell_number, professionals.home_phone from professionals",
    "goldSQL": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select breeds.breed_type, sizes.size_code from breeds union select sizes.size_code, sizes.size_description from sizes",
    "goldSQL": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select distinct dogs.breed_code, dogs.size_code from dogs",
    "goldSQL": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select professionals.first_name, treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct professionals.first_name, treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code",
    "goldSQL": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select count ( * ) from singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from singer",
    "goldSQL": "SELECT count(*) FROM singer",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer order by singer.net_worth_millions asc",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name from singer order by singer.net_worth_millions asc",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.birth_year, singer.citizenship from singer",
    "goldSQL": "SELECT Birth_Year ,  Citizenship FROM singer",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.birth_year, singer.citizenship from singer",
    "goldSQL": "SELECT Birth_Year ,  Citizenship FROM singer",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer where singer.citizenship!= \"France\"",
    "goldSQL": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name from singer where singer.citizenship!= \"French\"",
    "goldSQL": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "hardness": "easy",
    "label": 0,
    "exec": false,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name from singer where singer.birth_year = 1948 or singer.birth_year = 1949",
    "goldSQL": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer where singer.birth_year = 1948 or singer.birth_year = 1949",
    "goldSQL": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer order by singer.net_worth_millions desc limit 1",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer order by singer.net_worth_millions desc limit 1",
    "goldSQL": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.citizenship, count ( * ) from singer group by singer.citizenship",
    "goldSQL": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.citizenship, count ( * ) from singer group by singer.citizenship",
    "goldSQL": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.citizenship from singer group by singer.citizenship order by count ( * ) desc limit 1",
    "goldSQL": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.citizenship from singer group by singer.citizenship order by count ( * ) desc limit 1",
    "goldSQL": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.citizenship, max ( singer.net_worth_millions ) from singer group by singer.citizenship",
    "goldSQL": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.citizenship, max ( singer.net_worth_millions ) from singer group by singer.citizenship",
    "goldSQL": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select song.title, singer.name from song join singer on song.singer_id = singer.singer_id",
    "goldSQL": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select song.title, singer.name from song join singer on song.singer_id = singer.singer_id",
    "goldSQL": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct singer.name from singer join song on singer.singer_id = song.singer_id where song.sales > 300000",
    "goldSQL": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select distinct singer.name from singer join song on singer.singer_id = song.singer_id where song.sales > 300000",
    "goldSQL": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer join song on singer.singer_id = song.singer_id group by song.singer_id having count ( * ) > 1",
    "goldSQL": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer join song on singer.singer_id = song.singer_id group by song.singer_id having count ( * ) > 1",
    "goldSQL": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name, sum ( song.sales ) from singer join song on singer.singer_id = song.singer_id group by singer.singer_id",
    "goldSQL": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name, sum ( song.sales ) from singer join song on singer.singer_id = song.singer_id group by singer.name",
    "goldSQL": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select singer.name from singer where singer.singer_id not in ( select song.singer_id from song )",
    "goldSQL": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.name from singer where singer.singer_id not in ( select song.singer_id from song )",
    "goldSQL": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.citizenship from singer where singer.birth_year < 1945 intersect select singer.citizenship from singer where singer.birth_year > 1955",
    "goldSQL": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select singer.citizenship from singer where singer.birth_year < 1945 intersect select singer.citizenship from singer where singer.birth_year > 1955",
    "goldSQL": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "hardness": "hard",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select count ( * ) from other_available_features",
    "goldSQL": "SELECT count(*) FROM Other_Available_Features",
    "hardness": "easy",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 1
  },
  {
    "predictSQL": "select ref_feature_types.feature_type_name from other_available_features join ref_feature_types on other_available_features.feature_type_code = ref_feature_types.feature_type_code where other_available_features.feature_name = \"AirCon\"",
    "goldSQL": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "hardness": "medium",
    "label": 1,
    "exec": true,
    "exact": true,
    "codebert": 0
  },
  {
    "predictSQL": "select ref_property_types.property_type_description from ref_property_types join properties on ref_property_types.property_type_code = properties.property_type_code",
    "goldSQL": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "hardness": "medium",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 1
  },
  {
    "predictSQL": "select properties.property_name from properties where properties.property_type_code = \"House\" or properties.room_count > 1",
    "goldSQL": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "hardness": "hard",
    "label": 0,
    "exec": false,
    "exact": false,
    "codebert": 0
  }
]